const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/I3STreeDebugger-CTDsHtLy.js","assets/index-DX0rcHuW.js","assets/index-B2yzeq1w.css","assets/mat4f64-Dk4dwAN8.js","assets/TileTreeDebugger-BD-0r5wQ.js"])))=>i.map(i=>d[i]);
import{b5 as V,jZ as j,dI as y,fa as N,bY as H,_ as Q,c1 as q,n as w,bK as F,bR as T,d3 as U,kc as z,kd as k,d as S,cv as B,hI as Z,ff as A,ac as c,ad as m,gM as K,ag as W,bp as Y}from"./index-DX0rcHuW.js";import{n as J,e as X}from"./projectVectorToVector-DjKO2tJh.js";import{t as G,e as ee}from"./DoubleArray-tnpOy9RK.js";import{o as te}from"./LayerConstants-B33OP6sh.js";import{Z as re}from"./dehydratedFeatures-DvwHN5Vy.js";import{c as ie}from"./hydratedFeatures-DcIGyuBL.js";import{G as P,K as oe}from"./I3SOverrides-CVSW0AdW.js";import{S as se}from"./basemapUtils-rjdIOXhY.js";import{h as ae}from"./WorkerHandle-DkXs_4ea.js";import{l as ne}from"./LayerView3D-CLOjZQPa.js";import{P as de,l as le}from"./HeatmapDensity.glsl-BBus6Kfx.js";import{w as pe,a as he,i as ue,u as ce,f as me,b as ge}from"./SceneLayerView-X1G1qmix.js";import{Y as _e,t as fe,N as ye,A as be,Q as M}from"./I3SUtil-CmoO_9SI.js";import{u as ve,t as Ie}from"./TemporalSceneLayerView-CsuMFrvM.js";import{t as xe}from"./WaterSurface.glsl-CB7boCuS.js";import{i as Ee}from"./PopupSceneLayerView-fzItebd0.js";import{t as C}from"./Material-BfvzXcva.js";import{J as we,s as Ne}from"./orientedBoundingBox-BTwqkknQ.js";import{t as Ce}from"./Viewshed.glsl-BfaJltDE.js";import{C as Oe}from"./RenderGeometry-CQQOC_nW.js";import{u as De}from"./popupUtils-DV44wDbq.js";import{I as Fe}from"./Scheduler-Bg_fxWwI.js";import"./projectPointToVector-6lqiVL77.js";import"./ViewingMode-Dodu7ZZk.js";import"./uuid-fwrPAdZb.js";import"./mat3-Ck4GO2qT.js";import"./mat3f64-BBpwCtoL.js";import"./RenderTexture-CQ39aJeo.js";import"./meshVertexSpaceUtils-UWZ_3JBG.js";import"./MeshLocalVertexSpace-Ck1lhGhd.js";import"./sphere-COyqsaGw.js";import"./plane-BL9J6YX0.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-BrpT0VRp.js";import"./vec2f64-Diu2Kaa8.js";import"./mathUtils-BsqbT0oM.js";import"./resourceUtils-Cv8EFCAN.js";import"./basicInterfaces-wONHx_SN.js";import"./Texture-0jciB86n.js";import"./Matrix4PassUniform-CTNrzJ6Q.js";import"./interfaces-B8ge7Jg9.js";import"./BindType-BmZEZMMh.js";import"./VertexAttribute-BnAa5VW0.js";import"./Util-HYkJg9Vp.js";import"./enums-BlUEVwJR.js";import"./Texture-BF0Xf23l.js";import"./vec2-C-4tM9Uv.js";import"./ShaderTechniqueConfiguration-D3UbJ2mX.js";import"./doublePrecisionUtils-B0owpBza.js";import"./Indices-BZu2O98k.js";import"./triangle-CGr49R4x.js";import"./lineSegment-C2OVzbAD.js";import"./renderState-yUi34s5A.js";import"./requestImageUtils-Cd7mPI4y.js";import"./objectResourceUtils-dMevf21j.js";import"./devEnvironmentUtils-D6qIi8Ky.js";import"./BufferView-XrMc2vJu.js";import"./vec3-DxxvdsHs.js";import"./vec4-B2fX0VJI.js";import"./DefaultMaterial_COLOR_GAMMA-vDn2TTUE.js";import"./quat-DrJsq_-D.js";import"./vec2f32-BbH2jxlN.js";import"./NestedMap-DgiGbX8E.js";import"./InterleavedLayout-ZKuAjCiK.js";import"./types-D0PSWh4d.js";import"./VertexColor.glsl-BX9otDj2.js";import"./verticalOffsetUtils-Bq_pVrum.js";import"./DecodeSymbolColor.glsl-CpAWHGzb.js";import"./I3SNode-BgQKDP3t.js";import"./ElevationRange-BrgM1moX.js";import"./I3SBinaryReader-BFXMM8o8.js";import"./spatialReferenceEllipsoidUtils-Bv0mQCFg.js";import"./frustum-Tc8kkw3_.js";import"./ReactiveSet-BcQY7AxE.js";import"./meshFeatureSet-D94MLvmF.js";import"./Mesh-C4vN4bid.js";import"./axisAngleDegrees-jEN9n05M.js";import"./MeshComponent-CcZOTV9N.js";import"./imageUtils-BsB3EL45.js";import"./MeshVertexAttributes-DiX-RN8y.js";import"./MeshTransform-DiRYmUD4.js";import"./triangulationUtils-BSy4A0L9.js";import"./earcut-BqgeR2O3.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./deduplicate-CREmZpKM.js";import"./projection-BJFZt5ZW.js";import"./computeTranslationToOriginAndRotation-B9BchKSd.js";import"./vertexSpaceConversion-BW-Bnw8A.js";import"./External-EuBme4r6.js";import"./infoFor3D-CxOdoily.js";import"./FeatureLayerView3D-IOGDGG12.js";import"./FeatureLayerViewBase3D-DVfo53XS.js";import"./query-95tcIPsI.js";import"./normalizeUtils-CzEkgn6d.js";import"./normalizeUtilsCommon-DXRtgGFh.js";import"./utils-nzDIu46v.js";import"./utils-D67OULxu.js";import"./pbfQueryUtils-B33F7Io8.js";import"./pbf-9I_px9lQ.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./queryZScale-B1r3mH-Y.js";import"./EventedSet-BOQvLI-h.js";import"./signal-CpmfLcHB.js";import"./FeatureLayerView-B4IvI3h4.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./LayerView-C2s9lN61.js";import"./UpdatingHandles-CERUeL1P.js";import"./layerViewUtils-D2JqIDZ8.js";import"./RefreshableLayerView-C2j9J409.js";import"./timeSupport-BW78MsMT.js";import"./timeUtils-CovJpMS2.js";import"./utils-CXgSw6Sd.js";import"./tagSymbols-BPcGfZon.js";import"./projectExtentUtils-iwgeHhrT.js";import"./geometryServiceUtils-zF1xOQ4Y.js";import"./project-BQyPiext.js";import"./vec3f32-Cw9Q6TO_.js";import"./ElevationProvider-Xg9LKEp7.js";import"./boundedPlane-MAPkm7Yi.js";import"./weather-CSMUgeU9.js";import"./debugFlags-Cr0sx6r_.js";import"./Float4DrawUniform-X0Lc1Ix0.js";import"./Octree-lrGXb_0y.js";import"./floatRGBA-DZ6CgOhi.js";import"./Intersector-CG5xfiNM.js";import"./glUtil-C6KhMg1m.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./VertexArrayObject-9V6uZ6_q.js";import"./BufferObject-CWTeBz1x.js";import"./arcgisLayerUrl-BpJodxxk.js";import"./ReactiveMap-r-vujrh9.js";import"./dehydratedFeatureComparison-Cl-LDztH.js";import"./Viewpoint-sw4jiA6m.js";import"./Cyclical-CEj-eenM.js";import"./jsxFactory-DmHi7Kb2.js";import"./GraphicsCollection-BjA_qBYu.js";import"./HeightModelInfo-DaJXTLDg.js";import"./ColorMaterial.glsl-CcrBVOmk.js";import"./featureConversionUtils-C8uvc1AG.js";import"./edgeUtils-CckHLSHv.js";import"./SnappingCandidate-O5eRSE6e.js";import"./Normals-ClOhen2_.js";import"./CIMSymbolHelper-DvNaY2BT.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-BN21lj56.js";import"./GeometryUtils-CGNDP0vy.js";import"./enums-BRXbslMp.js";import"./definitions-ByNBSgP9.js";import"./mat2d-CXMJJ9G6.js";import"./mat2df32-orApM5a3.js";import"./Rect-CUzevAry.js";import"./BoundingBox-BhuXqU4L.js";import"./cimSymbolUtils-DzDRYI6s.js";import"./utils-BbU12Hvz.js";import"./lineStippleUtils-Cu2kwDBg.js";import"./projectVectorToPoint-jxEu1YJy.js";import"./DefaultLayouts-LbPHMYzg.js";import"./webStyleSymbolUtils-CT_ZIx-N.js";import"./Intersector-ENyKy7_L.js";import"./RenderCoordsHelper-D33jtR9v.js";import"./scaleUtils-ClqQrarK.js";import"./DefaultUI-BM5o-ZLH.js";import"./InputManager-abOXR3ru.js";import"./Map-BcseqEdU.js";import"./Basemap-CjElSnyL.js";import"./loadAll-8MiqgLTH.js";import"./writeUtils-RiCb1SCd.js";import"./Ground-dhRLerDt.js";import"./CollectionFlattener-Be8YW6oV.js";import"./editableLayers-DuIVmwOk.js";import"./catalogUtils-B2PovfNH.js";import"./TablesMixin-CcZZ6esO.js";import"./selectionUtils-DYi6daQO.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-BcEL8jIe.js";import"./a11yUtils-BcOnuh2m.js";import"./heightModelInfoUtils-CTi_JiJC.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-CjDcv_he.js";import"./Compass-S4M9NML1.js";import"./utils-DsJqvptN.js";import"./GoTo-Bv8U0vYJ.js";import"./NavigationToggle-Da_EVApx.js";import"./Zoom-OTCbJYcz.js";import"./viewpointUtils-CNGyoIgw.js";import"./earthUtils-GWU8KixL.js";import"./spatialReferenceSupport-Bk67zMEK.js";import"./ElevationSamplerData-CFwzCheb.js";import"./terrainUtils-BQLPw4Jq.js";import"./TileInfo-DuivnO5H.js";import"./TileKey-DZd6gJy7.js";import"./Environment-Bpau6Ty8.js";import"./quantityUtils-DSpmykXR.js";import"./Program-BnQQlkGO.js";import"./ShadowCastVisualizeTechniqueConfiguration-Dah3u-G-.js";import"./euclideanLengthMeasurementUtils-CuSkQONc.js";import"./ray-BtGY6UNr.js";import"./ZoomMomentumEstimator-pQkiU-PR.js";import"./labelFormatUtils-DjuAeSua.js";import"./FeatureTileDescriptor3D-CvT50Jkf.js";import"./elevationInfoUtils-JmMUMmCn.js";import"./ElevationQueryTileCache-ByGSevWc.js";import"./hitTestSelectUtils-UXJPjatw.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./RenderableTile-CE6botJN.js";import"./enums-BRzLM11V.js";import"./TileStrategy-CcsveE-I.js";import"./TileKey-m4M152GY.js";import"./QueueProcessor-01Ee2ByR.js";import"./config-MDUrh2eL.js";import"./DefaultVertexAttributeLayouts-_lUGuBk_.js";import"./DisplayObject-I7xo9JVP.js";import"./StyleDefinition-BK3ROBTO.js";import"./resources-Bv-4dVJF.js";import"./edgeProcessing-BO3TMEUB.js";import"./testSVGPremultipliedAlpha-eKesxQ43.js";import"./RenderingContext-DNkBZ-bu.js";import"./ProgramCache-DLTjjJNh.js";import"./queryForSymbologySnapping-DtZ2tRrq.js";import"./hash-CcEbRgUF.js";import"./Graphics3DObjectStates-SRay_DL-.js";import"./rendererConversion-CGE-jMPN.js";import"./optimizedFeatureQueryEngineAdapter-Buta7wlw.js";import"./centroid-DdLmOD72.js";import"./PooledRBush-txtruiUM.js";import"./quickselect-D0_cvEX6.js";import"./QueryEngine-SKHuQoIy.js";import"./WhereClause-C3Bpu3MP.js";import"./TimeOnly-DZBbU_oj.js";import"./timeSupport-BrCiU-ir.js";import"./json-Wa8cmqdu.js";import"./utils-NIIWJwfl.js";import"./utils-CZ12wTZ2.js";import"./utils-fmpzjX3M.js";import"./ClassBreaksDefinition-RQBfkmon.js";import"./FeatureStore-BRjii-6R.js";import"./BoundsStore-266MdP16.js";import"./heatmapTextureUtils-Cp303dtW.js";class R extends ae{constructor(t){super("SceneLayerWorker","dracoDecompressPointCloudData",{dracoDecompressPointCloudData:i=>[i.geometryBuffer]},t,{hasInitialize:!0})}}class Se extends V{constructor(t,i){super(),this._updateAndCompare=t,this._notifyUpdated=i,this._nodes=new Map,this._graphics=new Map,this._duplicates=new Map}clear(){if(this._graphics.size>0){const t=this.toArray();this._graphics.clear(),this.emit("change",{added:[],removed:t})}this._nodes.clear()}get length(){return this._graphics.size}get(t){return this._graphics.get(t)}getNode(t){return this._nodes.get(t)}hasNode(t){return this._nodes.has(t)}nodes(){return this._nodes.values()}addNode(t,i){this._nodes.set(t,i);const r=i.graphics;if(r.length===0)return;const o=new Set;for(let a=0;a<r.length;a++){const n=r[a],d=n.objectId,h=this._graphics.get(d);if(h){o.add(d),n!==h&&(r[a]=h);const p=this._duplicates.get(d);p?p.push(t):this._duplicates.set(d,[h.nodeIndex,t])}else n.nodeIndex=t,this._graphics.set(d,n)}o.size&&this._updateForeignGraphics(i);const s=o.size>0?r.filter(a=>!o.has(a.objectId)):r;s.length>0&&this.emit("change",{added:s,removed:[]})}removeNode(t){const i=this._nodes.get(t);if(!i)return;this._nodes.delete(t);const r=new Set,o=[];for(const s of i.graphics){const a=s.objectId,n=this._graphics.get(a);if(!n)continue;const d=this._duplicates.get(a);if(d){const h=d.indexOf(t);if(h===-1)continue;if(d.splice(h,1),n.nodeIndex===t){let p=this.getNode(d[0]);for(let l=1;l<d.length;l++){const g=this.getNode(d[l]);(p==null||g!=null&&g.node.level>p.node.level)&&(p=g)}p!=null&&r.add(p)}d.length===1&&this._duplicates.delete(a)}else this._graphics.delete(a),o.push(s)}o.length>0&&this.emit("change",{added:[],removed:o}),r.forEach(s=>this._updateForeignGraphics(s))}_updateForeignGraphics(t){const i=[],r=t.node.index,o=t.node.level;let s=0;for(;s<t.graphics.length;){const a=t.graphics[s].nodeIndex;if(a===r){s++;continue}let n=1;for(;s+n<t.graphics.length&&t.graphics[s+n].nodeIndex===a;)n++;const d=this.getNode(a);if(d!=null&&d.node.level>o)s+=n;else{for(let h=s;h<s+n;h++){const p=t.graphics[h];p.nodeIndex=r,this._updateAndCompare(p,t,h)&&i.push(p)}s+=n}}i.length>0&&this._notifyUpdated(i)}toArray(){return Array.from(this._graphics.values())}find(t){let i;return j(this._graphics,r=>!!t(r)&&(i=r,!0)),i}forEach(t){this._graphics.forEach(i=>t(i))}forEachNode(t){this._nodes.forEach((i,r)=>t(i,r))}get nodeCount(){return this._nodes.size}_checkInvariants(){const t=new Map;this._nodes.forEach((i,r)=>{i.graphics.forEach(o=>{t.set(o.objectId,1+(t.get(o.objectId)??0)),this._duplicates.get(o.objectId)})}),t.forEach((i,r)=>{const o=this._graphics.get(r);if(!o||!this._nodes.get(o.nodeIndex))return;const s=this._duplicates.get(r);s&&s.forEach(a=>{this._nodes.get(a)})})}}const $=ge();class Ae{constructor(t,i,r,o){this.graphics=t,this.featureIds=i,this.attributeInfo=r,this.node=o}}let u=class extends ve(Ie(Ee(ne(pe)))){constructor(){super(...arguments),this.type="scene-layer-graphics-3d",this._queryEngine=null,this._memCache=null,this._interactiveEditingSessions=new Map,this._pendingEditsQueue=Promise.resolve(),this.loadedGraphics=new Se((e,t,i)=>Pe(e,t,i),e=>this.processor.graphicsCore.recreateGraphics(e)),this.holeFilling="always",this.progressiveLoadFactor=1,this.supportsHeightUnitConversion=!0,this._coordinatesOutsideExtentErrors=0,this._maxCoordinatesOutsideExtentErrors=20}tryRecycleWith(e,t){return e.url===this.layer.url&&this._i3sOverrides.isEmpty?e.load(t).then(()=>{var r;_e(this.layer,e,this._i3sOverrides),this.layer=e,this._i3sOverrides.destroy();const i=(r=this.view.resourceController)==null?void 0:r.memoryController;this._i3sOverrides=new P({view:this.view,layer:e,memoryController:i}),y(this._queryEngine),this._setupQueryEngine(),this.processor.resetObjectStates()}):null}initialize(){var t,i;this.addResolvingPromise(this.layer.indexInfo);const e=(t=this.view.resourceController)==null?void 0:t.memoryController;this._i3sOverrides=new P({view:this.view,layer:this.layer,memoryController:e}),fe(this.layer,this.view.spatialReference,this.view.viewingMode),this._fieldsHelper=new he({layerView:this}),this._updatingHandles.add(()=>this.layer.rangeInfos,r=>this._rangeInfosChanged(r),N),this._updatingHandles.add(()=>this.layer.renderer,(r,o)=>this._rendererChange(r,o)),this._updatingHandles.add(()=>[this.parsedDefinitionExpression,this._excludeObjectIdsSorted],()=>this._filterChange()),this.addHandles(H(()=>C.I3S_TREE_SHOW_TILES,r=>{if(r&&!this._treeDebugger){const o=this._controller.crsIndex;Q(()=>import("./I3STreeDebugger-CTDsHtLy.js"),__vite__mapDeps([0,1,2,3,4])).then(({I3STreeDebugger:s})=>{!this._treeDebugger&&C.I3S_TREE_SHOW_TILES&&(this._treeDebugger=new s({lv:this,view:this.view,nodeSR:o}))})}else r||!this._treeDebugger||C.I3S_TREE_SHOW_TILES||(this._treeDebugger.destroy(),this._treeDebugger=null)},N)),this._set("processor",new de({owner:this,preferredUpdatePolicy:Oe.ASYNC,scaleVisibilityEnabled:!0,filterVisibilityEnabled:!0,timeExtentEnabled:!1,frustumVisibilityEnabled:!1,elevationAlignmentEnabled:!0,elevationFeatureExpressionEnabled:!1,setUidToIdOnAdd:!1,dataExtent:this.layer.fullExtent,updateClippingExtent:r=>this._updateClippingExtent(r)})),(i=this.processor.elevationAlignment)==null||i.events.on("invalidate-elevation",({extent:r,spatialReference:o})=>this._controller.updateElevationChanged(r,o)),this.supportsHeightUnitConversion&&(this._verticalScale=q("point",this.layer.spatialReference,this.view.spatialReference)),this.addResolvingPromise(this.processor.initializePromise),this._memCache=this.view.resourceController.memoryController.newCache(`psl-${this.uid}`),this._controller=new oe({layerView:this}),ye(this.layer.geometryDefinitions)&&(this._worker=new R(r=>this.view.resourceController.immediate.schedule(r))),this.addHandles(this.layer.on("apply-edits",r=>this._updatingHandles.addPromise(r.result))),this.addHandles(this.layer.on("edits",r=>{const o=this._pendingEditsQueue.then(()=>this._handleEdits(r)).then();this._pendingEditsQueue=o,this._updatingHandles.addPromise(o)})),this.when(()=>{this._setupQueryEngine(),this._updatingHandles.add(()=>this.maximumNumberOfFeatures,r=>this._controller.featureTarget=r,N),this._updatingHandles.add(()=>this.suspended,r=>{r&&this._removeAllNodeData()})})}destroy(){this._treeDebugger=y(this._treeDebugger),this._i3sOverrides=y(this._i3sOverrides),this._set("processor",y(this.processor)),this._controller=y(this._controller),this._queryEngine=y(this._queryEngine),this._worker=y(this._worker),this._memCache=y(this._memCache),this.loadedGraphics.clear(),this._fieldsHelper=y(this._fieldsHelper)}get i3slayer(){return this.layer}get updatingProgressValue(){var e;return((e=this._controller)==null?void 0:e.updatingProgress)??1}get requiredFields(){var e;return((e=this._fieldsHelper)==null?void 0:e.requiredFields)??[]}get maximumNumberOfFeatures(){var t,i;const e=(i=(t=this.processor)==null?void 0:t.graphicsCore)==null?void 0:i.displayFeatureLimit;return(e==null?void 0:e.maximumNumberOfFeatures)??0}set maximumNumberOfFeatures(e){e!=null?(this._override("maximumNumberOfFeatures",e),this._controller.fixedFeatureTarget=!0):(this._clearOverride("maximumNumberOfFeatures"),this._controller.fixedFeatureTarget=!1)}get maximumNumberOfFeaturesExceeded(){var e;return!this.suspended&&!!((e=this._controller)!=null&&e.useMaximumNumberOfFeatures)&&!this._controller.leavesReached}get _excludeObjectIdsSorted(){const e=this.layer.excludeObjectIds;return e.length?e.toArray().sort((t,i)=>t-i):null}get lodFactor(){return this.layer.semantic==="Labels"?1:this.view.qualitySettings.sceneService.point.lodFactor}get hasM(){return!1}get hasZ(){return!0}get contentVisible(){var e;return!this.suspended&&!!((e=this._controller)!=null&&e.rootNodeVisible)}get legendEnabled(){var e;return this.contentVisible&&((e=this.i3slayer)==null?void 0:e.legendEnabled)===!0}async whenGraphicAttributes(e,t){return be(this.layer,e,this._getObjectIdField(),t,()=>[...this.loadedGraphics.nodes()])}getHit(e){var r;if(!this.loadedGraphics)return null;const t=ie(this.loadedGraphics.find(o=>o.uid===e),this.layer),i=this._getObjectIdField();return(r=t==null?void 0:t.attributes)!=null&&r[i]?(t.layer=this.layer,t.sourceLayer=this.layer,{type:"graphic",graphic:t,layer:t.layer}):null}whenGraphicBounds(e,t){return this.processor.whenGraphicBounds(e,t)}computeAttachmentOrigin(e,t){return this.processor.computeAttachmentOrigin(e,t)}isUpdating(){var e,t,i;return!!((e=this._controller)!=null&&e.updating||(t=this.processor)!=null&&t.updating||(i=this._fieldsHelper)!=null&&i.updating||this.layerFilterUpdating)}highlight(e){return this.processor.highlight(e,this.layer.objectIdField)}get updatePolicy(){return this.processor.graphicsCore.effectiveUpdatePolicy}createInteractiveEditSession(e){return ue(this._attributeEditingContext,e)}async _decompressBinaryPointData(e,t){const i={geometryBuffer:e.geometryBuffer};this._worker==null&&(this._worker=new R(o=>this.view.resourceController.immediate.schedule(o)));const r=await this._worker.invoke(i,t);if(r==null)throw new Error("Failed to decompress Draco point data");return{positionData:r.positions,featureIds:r.featureIds}}async addNode(e,t,i){var f;if(!O(t)&&!Ge(t))throw new Error;if(this.loadedGraphics.hasNode(e.index))return void w.getLogger(this).error("I3S node "+e.id+" already added");const r=this.layer.fullExtent!=null?Re(this.layer.fullExtent.clone(),.5):null,{featureIds:o,pointPositions:s}=O(t)?await this._extractBinaryPointPositions(e,t,i):this._extractLegacyPointPositions(t),a=new Array;this._validatePositions(e,o,s,r,a);const n=this._controller.crsVertex,d=this.view.spatialReference;F(s,n,0,s,d,0,o.length);const h=O(t)?e.level:0,p=this._createGraphics(o,s,e.index,h),l=new Ae(p,o,t.attributeDataInfo,e);if(await this._i3sOverrides.applyAttributeOverrides(l.featureIds,t.attributeDataInfo,i),e.numFeatures=l.graphics.length,this._updateNodeMemory(e),D(l),a.length>0&&(this._computeObb(e,a,n),this._controller.updateVisibility(e.index)),!this._controller.isGeometryVisible(e))return void this._cacheNodeData(l);if(this._verticalScale!=null)for(const b of l.graphics)this._verticalScale(b.geometry);const g=this.view._stage.renderView.objectAndLayerIdRenderHelper;if(g!=null){const b=se(this.view.map,this.layer.uid);for(let x=0;x<l.featureIds.length;x++){const E=l.featureIds[x];g.setUidToObjectAndLayerId(E,l.graphics[x].uid,this.layer.id,this.layer.uid,this.layer.popupEnabled&&!b&&De(this.layer,(f=this.view.popup)==null?void 0:f.defaultPopupTemplateEnabled),l.node.resources.attributes,x)}}this.loadedGraphics.addNode(e.index,l),this._controller.updateLoadStatus(e.index,!0),this._filterNode(l),this._treeDebugger&&this._treeDebugger.update()}_computeObb(e,t,i){const r=this._controller.crsIndex,o=r.isGeographic?this.view.renderSpatialReference:r;F(t,i,0,t,o,0,t.length/3),e.serviceObbInIndexSR=we(new Ne(t,3)),r.isGeographic&&(J(e.serviceObbInIndexSR.center,o,I,r),e.serviceObbInIndexSR.center=I)}isNodeLoaded(e){return this.loadedGraphics.hasNode(e)}isNodeReloading(){return!1}updateNodeState(){}async _extractBinaryPointPositions(e,t,i){const r=await this._decompressBinaryPointData(t,i),o=r.positionData,s=3,a=o.length/s,n=G(3*a),d=e.serviceObbInIndexSR!=null?e.serviceObbInIndexSR.center:T,h=Math.abs(d[2])*2**-20;for(let p=0;p<a;p++){const l=p*s;n[l]=o[l]+d[0],n[l+1]=o[l+1]+d[1],n[l+2]=o[l+2]+d[2],Math.abs(n[l+2])<h&&(n[l+2]=0)}return{featureIds:r.featureIds?ee(r.featureIds):[],pointPositions:n}}_extractLegacyPointPositions(e){var o,s;const t=e.pointData.length,i=G(3*t),r=new Array;for(let a=0;a<t;a++){const n=e.pointData[a],d=n.featureDataPosition,h=d.length,p=((o=n.geometries)==null?void 0:o[0])??$e[h],l=n.featureIds[0];if(p.type!=="Embedded"||p.params.type!=="points"||h<2||h>3)continue;const g=((s=p.params.vertexAttributes)==null?void 0:s.position)??[0,0,0],f=3*r.length;i[f]=d[0]+g[0],i[f+1]=d[1]+g[1],i[f+2]=h===3?d[2]+g[2]:NaN,r.push(l)}return{featureIds:r,pointPositions:i}}_validatePositions(e,t,i,r,o){if(r==null&&e.serviceObbInIndexSR)return;const s=t.length,a=3;for(let n=0;n<s;n++){const d=n*a;U(I,i[d],i[d+1],i[d+2]);const h=!Number.isNaN(i[2]);r==null||(h?z(r,I):k(r,I))||(this._coordinatesOutsideExtentErrors<this._maxCoordinatesOutsideExtentErrors&&w.getLogger(this).error("Service Error: Coordinates outside of layer extent"),this._coordinatesOutsideExtentErrors+1===this._maxCoordinatesOutsideExtentErrors&&w.getLogger(this).error("Maximum number of errors reached. Further errors are ignored."),this._coordinatesOutsideExtentErrors++),e.serviceObbInIndexSR||o.push(I[0],I[1],I[2])}}_createGraphics(e,t,i,r){const o=e.length,s=3,a=this._getObjectIdField(),n=this.processor.graphicsCore,d=new Array,h=this.view.spatialReference;for(let p=0;p<o;p++){const l=e[p],g={};l!=null&&(g[a]=l);const f=l??S.generateUID(),b=p*s,x=isNaN(t[b+2])?void 0:t[b+2],E=X(t[b],t[b+1],x,h),v=this.loadedGraphics.get(f);if(v!=null)(v.level==null||v.level<r)&&(_.property="geometry",_.graphic=v,_.oldValue=v.geometry,_.newValue=E,v.geometry=E,v.level=r,n.graphicUpdateHandler(_)),d.push(v);else{const L=S.generateUID();d.push({objectId:f,uid:L,geometry:E,attributes:g,visible:!0,nodeIndex:i,level:r})}}return d}_updateNodeMemory(e){e.memory=4096+(e.numFeatures!=null?e.numFeatures*this.processor.graphicsCore.usedMemoryPerGraphic:0)}_cacheNodeData(e){const t=e.graphics.reduce((i,r)=>re(r)+i,B(e.featureIds)+1024);this._memCache.put(this._getMemCacheKey(e.node),e,t)}_getMemCacheKey(e){return`${e.index}`}_removeAllNodeData(){this.loadedGraphics.forEachNode((e,t)=>{if(e){const i=e.node;this._updateNodeMemory(i),this._cacheNodeData(e)}this._controller.updateLoadStatus(t,!1)}),this._treeDebugger&&this._treeDebugger.update(),this.loadedGraphics.clear()}removeNode(e){const t=this._removeNodeStageData(e);t&&(this._updateNodeMemory(t.node),this._cacheNodeData(t))}_removeNodeStageData(e){const t=this.loadedGraphics.getNode(e);return t==null?null:(this._controller.updateLoadStatus(e,!1),this.loadedGraphics.removeNode(e),this._treeDebugger&&this._treeDebugger.update(),t)}async loadCachedNodeData(e){var t;return(t=this._memCache)==null?void 0:t.pop(this._getMemCacheKey(e))}async addCachedNodeData(e,t,i,r){this.loadedGraphics.hasNode(e.index)?w.getLogger(this).error("I3S node "+e.id+" already added"):(await this._i3sOverrides.applyAttributeOverrides(t.featureIds,i,r),t.attributeInfo=i,this.loadedGraphics.addNode(e.index,t),this._controller.updateLoadStatus(e.index,!0),this._updateNodeMemory(e),D(t),this._filterNode(t),this._treeDebugger&&this._treeDebugger.update())}getLoadedNodeIds(){const e=[];return this.loadedGraphics.forEachNode(t=>e.push(t.node.id)),e.sort()}getVisibleNodes(){const e=new Array;return this.loadedGraphics.forEachNode(t=>e.push(t.node)),e}getLoadedNodeIndices(e){this.loadedGraphics.forEachNode((t,i)=>e.push(i))}getLoadedAttributes(e){const t=this.loadedGraphics.getNode(e);if((t==null?void 0:t.attributeInfo)!=null)return t.attributeInfo.loadedAttributes}getAttributeData(e){const t=this.loadedGraphics.getNode(e);if((t==null?void 0:t.attributeInfo)!=null)return t.attributeInfo.attributeData}_setAttributeData(e,t){const i=this.loadedGraphics.getNode(e);(i==null?void 0:i.attributeInfo)!=null&&(i.attributeInfo.attributeData=t,this._attributeValuesChanged(i))}async updateAttributes(e,t,i){const r=this.loadedGraphics.getNode(e);r!=null&&(await this._i3sOverrides.applyAttributeOverrides(r.featureIds,t,i),r.attributeInfo=t,this._attributeValuesChanged(r))}_attributeValuesChanged(e){if(D(e),this._filterNode(e),this.processor.graphicsCore.labelsEnabled){const t=e.node.index,i=new Array;e.graphics.forEach(r=>r.nodeIndex===t&&i.push(r.uid)),this.processor.graphicsCore.updateLabelingInfo(i)}}_updateClippingExtent(e){return this._controller&&this._controller.updateClippingArea(e),!1}_getObjectIdField(){return this.layer.objectIdField||te}_getGlobalIdField(){var e;return(e=this.layer.associatedLayer)==null?void 0:e.globalIdField}async _rendererChange(e,t){const{layer:{fieldsIndex:i}}=this,r=new Set;let o,s;e?(await e.collectRequiredFields(r,i),o=Array.from(r).sort()):o=[],r.clear(),t?(await t.collectRequiredFields(r,i),s=Array.from(r).sort()):s=[],o.length===s.length&&o.every((a,n)=>o[n]===s[n])||this._reloadAllNodes()}_rangeInfosChanged(e){e!=null&&e.length>0&&w.getLogger(this).warn("Unsupported property: rangeInfos are currently only serialized to and from web scenes but do not affect rendering.")}_filterChange(){this.loadedGraphics.forEachNode(e=>this._filterNode(e))}_reloadAllNodes(){this._removeAllNodeData(),this._controller&&this._controller.restartNodeLoading()}_filterNode(e){const t=this.parsedDefinitionExpression,i=this._excludeObjectIdsSorted,r=this._getObjectIdField();for(const o of e.graphics){const s=o.visible,a=!t||this._evaluateClause(t,o),n=i==null||Z(i,o.attributes[r])<0;o.visible=a&&n,s!==o.visible&&(_.graphic=o,_.property="visible",_.oldValue=s,_.newValue=o.visible,this.processor.graphicsCore.graphicUpdateHandler(_))}}createQuery(){const e={outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference};return this.filter!=null?this.filter.createQuery(e):new A(e)}queryFeatures(e,t){return this._queryEngine.executeQuery(this._ensureQuery(e),t==null?void 0:t.signal)}queryObjectIds(e,t){return this._queryEngine.executeQueryForIds(this._ensureQuery(e),t==null?void 0:t.signal)}queryFeatureCount(e,t){return this._queryEngine.executeQueryForCount(this._ensureQuery(e),t==null?void 0:t.signal)}queryExtent(e,t){return this._queryEngine.executeQueryForExtent(this._ensureQuery(e),t==null?void 0:t.signal)}_ensureQuery(e){return this._addDefinitionExpressionToQuery(e==null?this.createQuery():A.from(e))}_setupQueryEngine(){const e=()=>this.processor.featureStore;this._queryEngine=new le({context:{spatialReference:this.view.spatialReference,layer:this.layer,scheduler:this.view.resourceController.scheduler,get featureStore(){return e()},hasZ:this.hasZ,hasM:this.hasM},priority:Fe.FEATURE_QUERY_ENGINE})}get usedMemory(){var e,t;return((t=(e=this.processor)==null?void 0:e.graphicsCore)==null?void 0:t.usedMemory)??0}get unloadedMemory(){var e,t,i;return .8*((((e=this._controller)==null?void 0:e.unloadedMemoryEstimate)??0)+(((i=(t=this.processor)==null?void 0:t.graphicsCore)==null?void 0:i.unprocessedMemoryEstimate)??0))}get ignoresMemoryFactor(){return this._controller&&this._controller.fixedFeatureTarget}async _handleEdits(e){const t=this._attributeEditingContext,i=await ce(t,e);me(t,i)}get _attributeEditingContext(){const e=this._getObjectIdField(),t=this._getGlobalIdField();return{sessions:this._interactiveEditingSessions,fieldsIndex:this.layer.fieldsIndex,objectIdField:e,globalIdField:t,forEachNode:i=>this.loadedGraphics.forEachNode(r=>i(r.node,r.featureIds)),attributeStorageInfo:this.i3slayer.attributeStorageInfo??[],i3sOverrides:this._i3sOverrides,getAttributeData:i=>this.getAttributeData(i),setAttributeData:(i,r,o)=>{this._setAttributeData(i,r);const s=this.loadedGraphics.getNode(i);if(o!=null){const a=this.loadedGraphics.get(o.attributes[e]);a!=null&&this.processor.graphicsCore.recreateGraphics([a])}else s!=null&&this.processor.graphicsCore.recreateGraphics(s.graphics)},clearMemCache:()=>{}}}get performanceInfo(){return new xe(this.usedMemory,this.loadedGraphics.length,-1,this.maximumNumberOfFeatures,this.loadedGraphics.nodeCount,this.processor.graphicsCore.performanceInfo)}get test(){}};c([m()],u.prototype,"processor",void 0),c([m({type:K})],u.prototype,"filter",void 0),c([m()],u.prototype,"loadedGraphics",void 0),c([m()],u.prototype,"i3slayer",null),c([m()],u.prototype,"_controller",void 0),c([m()],u.prototype,"updating",void 0),c([m()],u.prototype,"suspended",void 0),c([m()],u.prototype,"holeFilling",void 0),c([m(Ce)],u.prototype,"updatingProgress",void 0),c([m()],u.prototype,"updatingProgressValue",null),c([m($.requiredFields)],u.prototype,"requiredFields",null),c([m($.availableFields)],u.prototype,"availableFields",void 0),c([m()],u.prototype,"_fieldsHelper",void 0),c([m({type:Number})],u.prototype,"maximumNumberOfFeatures",null),c([m({readOnly:!0})],u.prototype,"maximumNumberOfFeaturesExceeded",null),c([m()],u.prototype,"_excludeObjectIdsSorted",null),c([m({readOnly:!0})],u.prototype,"lodFactor",null),c([m({readOnly:!0})],u.prototype,"hasM",null),c([m({readOnly:!0})],u.prototype,"hasZ",null),c([m()],u.prototype,"contentVisible",null),c([m({readOnly:!0})],u.prototype,"legendEnabled",null),u=c([W("esri.views.3d.layers.SceneLayerGraphicsView3D")],u);const ps=u;function Ge(e){return"pointData"in e}function O(e){return"geometryBuffer"in e&&e.geometryBuffer!==null}function Pe(e,t,i){const r=t.attributeInfo;if((r==null?void 0:r.loadedAttributes)==null||r.attributeData==null)return!1;let o=!1;for(const{name:s}of r.loadedAttributes)if(r.attributeData[s]){const a=M(r.attributeData[s],i);a!==e.attributes[s]&&(e.attributes[s]=a,o=!0)}return o}function D(e){const t=e.attributeInfo,i=e.node.index;if((t==null?void 0:t.loadedAttributes)!=null&&t.attributeData!=null)for(let r=0;r<e.graphics.length;r++){const o=e.graphics[r];if(o.nodeIndex===i){o.attributes||(o.attributes={});for(const{name:s}of t.loadedAttributes)t.attributeData[s]&&(o.attributes[s]=M(t.attributeData[s],r))}}}function Re(e,t){return e.xmin-=t,e.ymin-=t,e.xmax+=t,e.ymax+=t,e.zmin!=null&&e.zmax!=null&&(e.zmin-=t,e.zmax+=t),e.mmin!=null&&e.mmax!=null&&(e.mmin-=t,e.mmax+=t),e}const $e={2:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0]}}},3:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0,0]}}}},I=Y(),_={graphic:null,property:null,oldValue:null,newValue:null};export{ps as default};
