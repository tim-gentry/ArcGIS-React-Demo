import{ee as a,s as b,eJ as x,ac as u,ad as y,ag as T}from"./index-DX0rcHuW.js";import{s as I}from"./rasterProjectionHelper-ByWCXlzR.js";import{l as z}from"./LayerView3D-CLOjZQPa.js";import{p as R}from"./TiledLayerView3D-D-BGvpdn.js";import{v as G}from"./Viewshed.glsl-BfaJltDE.js";import{L as _}from"./enums-BlUEVwJR.js";import{c as w,l as P,_ as S,p as v,A as O,f as C,m as f}from"./rasterUtils-C5dL3JL-.js";import{u as L}from"./ImageryTileLayerView-CgyRuekY.js";import{y as $}from"./LayerView-C2s9lN61.js";import{i as A}from"./RefreshableLayerView-C2j9J409.js";import{r as E}from"./drapedUtils-C1LMlkrW.js";import{a as F}from"./capabilities-C84AMSCg.js";import"./heightModelInfoUtils-CTi_JiJC.js";import"./HeightModelInfo-DaJXTLDg.js";import"./arcgisLayerUrl-BpJodxxk.js";import"./WaterSurface.glsl-CB7boCuS.js";import"./RenderGeometry-CQQOC_nW.js";import"./vec2f64-Diu2Kaa8.js";import"./vec3f32-Cw9Q6TO_.js";import"./DoubleArray-tnpOy9RK.js";import"./Texture-0jciB86n.js";import"./Matrix4PassUniform-CTNrzJ6Q.js";import"./interfaces-B8ge7Jg9.js";import"./BindType-BmZEZMMh.js";import"./VertexAttribute-BnAa5VW0.js";import"./Util-HYkJg9Vp.js";import"./Texture-BF0Xf23l.js";import"./basicInterfaces-wONHx_SN.js";import"./vec2-C-4tM9Uv.js";import"./mat3-Ck4GO2qT.js";import"./mat3f64-BBpwCtoL.js";import"./mat4f64-Dk4dwAN8.js";import"./ShaderTechniqueConfiguration-D3UbJ2mX.js";import"./doublePrecisionUtils-B0owpBza.js";import"./Indices-BZu2O98k.js";import"./Material-BfvzXcva.js";import"./ViewingMode-Dodu7ZZk.js";import"./triangle-CGr49R4x.js";import"./sphere-COyqsaGw.js";import"./plane-BL9J6YX0.js";import"./quatf64-BrpT0VRp.js";import"./mathUtils-BsqbT0oM.js";import"./lineSegment-C2OVzbAD.js";import"./renderState-yUi34s5A.js";import"./requestImageUtils-Cd7mPI4y.js";import"./orientedBoundingBox-BTwqkknQ.js";import"./quat-DrJsq_-D.js";import"./spatialReferenceEllipsoidUtils-Bv0mQCFg.js";import"./computeTranslationToOriginAndRotation-B9BchKSd.js";import"./ElevationProvider-Xg9LKEp7.js";import"./boundedPlane-MAPkm7Yi.js";import"./verticalOffsetUtils-Bq_pVrum.js";import"./hydratedFeatures-DcIGyuBL.js";import"./projectVectorToVector-DjKO2tJh.js";import"./projectPointToVector-6lqiVL77.js";import"./frustum-Tc8kkw3_.js";import"./axisAngleDegrees-jEN9n05M.js";import"./weather-CSMUgeU9.js";import"./Scheduler-Bg_fxWwI.js";import"./signal-CpmfLcHB.js";import"./debugFlags-Cr0sx6r_.js";import"./Float4DrawUniform-X0Lc1Ix0.js";import"./NestedMap-DgiGbX8E.js";import"./Octree-lrGXb_0y.js";import"./InterleavedLayout-ZKuAjCiK.js";import"./BufferView-XrMc2vJu.js";import"./types-D0PSWh4d.js";import"./floatRGBA-DZ6CgOhi.js";import"./Intersector-CG5xfiNM.js";import"./glUtil-C6KhMg1m.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./VertexArrayObject-9V6uZ6_q.js";import"./BufferObject-CWTeBz1x.js";import"./ColorMaterial.glsl-CcrBVOmk.js";import"./VertexColor.glsl-BX9otDj2.js";import"./vec2f32-BbH2jxlN.js";import"./dehydratedFeatures-DvwHN5Vy.js";import"./featureConversionUtils-C8uvc1AG.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./edgeUtils-CckHLSHv.js";import"./DecodeSymbolColor.glsl-CpAWHGzb.js";import"./earcut-BqgeR2O3.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./vec3-DxxvdsHs.js";import"./SnappingCandidate-O5eRSE6e.js";import"./triangulationUtils-BSy4A0L9.js";import"./deduplicate-CREmZpKM.js";import"./Normals-ClOhen2_.js";import"./objectResourceUtils-dMevf21j.js";import"./devEnvironmentUtils-D6qIi8Ky.js";import"./vec4-B2fX0VJI.js";import"./DefaultMaterial_COLOR_GAMMA-vDn2TTUE.js";import"./resourceUtils-Cv8EFCAN.js";import"./CIMSymbolHelper-DvNaY2BT.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-BN21lj56.js";import"./GeometryUtils-CGNDP0vy.js";import"./enums-BRXbslMp.js";import"./definitions-ByNBSgP9.js";import"./mat2d-CXMJJ9G6.js";import"./mat2df32-orApM5a3.js";import"./Rect-CUzevAry.js";import"./BoundingBox-BhuXqU4L.js";import"./cimSymbolUtils-DzDRYI6s.js";import"./utils-BbU12Hvz.js";import"./lineStippleUtils-Cu2kwDBg.js";import"./projectVectorToPoint-jxEu1YJy.js";import"./MeshComponent-CcZOTV9N.js";import"./imageUtils-BsB3EL45.js";import"./MeshVertexAttributes-DiX-RN8y.js";import"./meshVertexSpaceUtils-UWZ_3JBG.js";import"./MeshLocalVertexSpace-Ck1lhGhd.js";import"./projection-BJFZt5ZW.js";import"./DefaultLayouts-LbPHMYzg.js";import"./webStyleSymbolUtils-CT_ZIx-N.js";import"./Intersector-ENyKy7_L.js";import"./terrainUtils-BQLPw4Jq.js";import"./TileInfo-DuivnO5H.js";import"./TileKey-DZd6gJy7.js";import"./layerViewUtils-D2JqIDZ8.js";import"./Viewpoint-sw4jiA6m.js";import"./Cyclical-CEj-eenM.js";import"./jsxFactory-DmHi7Kb2.js";import"./uuid-fwrPAdZb.js";import"./GraphicsCollection-BjA_qBYu.js";import"./RenderCoordsHelper-D33jtR9v.js";import"./scaleUtils-ClqQrarK.js";import"./DefaultUI-BM5o-ZLH.js";import"./UpdatingHandles-CERUeL1P.js";import"./InputManager-abOXR3ru.js";import"./Map-BcseqEdU.js";import"./Basemap-CjElSnyL.js";import"./loadAll-8MiqgLTH.js";import"./writeUtils-RiCb1SCd.js";import"./Ground-dhRLerDt.js";import"./CollectionFlattener-Be8YW6oV.js";import"./editableLayers-DuIVmwOk.js";import"./catalogUtils-B2PovfNH.js";import"./basemapUtils-rjdIOXhY.js";import"./TablesMixin-CcZZ6esO.js";import"./ReactiveMap-r-vujrh9.js";import"./selectionUtils-DYi6daQO.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-BcEL8jIe.js";import"./a11yUtils-BcOnuh2m.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-CjDcv_he.js";import"./Compass-S4M9NML1.js";import"./utils-DsJqvptN.js";import"./GoTo-Bv8U0vYJ.js";import"./NavigationToggle-Da_EVApx.js";import"./Zoom-OTCbJYcz.js";import"./viewpointUtils-CNGyoIgw.js";import"./earthUtils-GWU8KixL.js";import"./spatialReferenceSupport-Bk67zMEK.js";import"./ElevationSamplerData-CFwzCheb.js";import"./Environment-Bpau6Ty8.js";import"./quantityUtils-DSpmykXR.js";import"./Program-BnQQlkGO.js";import"./ShadowCastVisualizeTechniqueConfiguration-Dah3u-G-.js";import"./euclideanLengthMeasurementUtils-CuSkQONc.js";import"./ray-BtGY6UNr.js";import"./ZoomMomentumEstimator-pQkiU-PR.js";import"./labelFormatUtils-DjuAeSua.js";import"./FeatureTileDescriptor3D-CvT50Jkf.js";import"./elevationInfoUtils-JmMUMmCn.js";import"./ElevationQueryTileCache-ByGSevWc.js";import"./LayerConstants-B33OP6sh.js";import"./ElevationRange-BrgM1moX.js";import"./geometryServiceUtils-zF1xOQ4Y.js";import"./project-BQyPiext.js";import"./utils-nzDIu46v.js";import"./utils-D67OULxu.js";import"./hitTestSelectUtils-UXJPjatw.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./RenderableTile-CE6botJN.js";import"./enums-BRzLM11V.js";import"./TileStrategy-CcsveE-I.js";import"./TileKey-m4M152GY.js";import"./QueueProcessor-01Ee2ByR.js";import"./config-MDUrh2eL.js";import"./DefaultVertexAttributeLayouts-_lUGuBk_.js";import"./DisplayObject-I7xo9JVP.js";import"./StyleDefinition-BK3ROBTO.js";import"./resources-Bv-4dVJF.js";import"./edgeProcessing-BO3TMEUB.js";import"./testSVGPremultipliedAlpha-eKesxQ43.js";import"./RenderingContext-DNkBZ-bu.js";import"./ProgramCache-DLTjjJNh.js";import"./timeSupport-BW78MsMT.js";import"./timeUtils-CovJpMS2.js";import"./utils-CXgSw6Sd.js";import"./tagSymbols-BPcGfZon.js";import"./popupUtils-DV44wDbq.js";const g={bandCount:3,outMin:0,outMax:1,minCutOff:[0,0,0],maxCutOff:[255,255,255],factor:[1/255,1/255,1/255],useGamma:!1,gamma:[1,1,1],gammaCorrection:[1,1,1],colormap:null,colormapOffset:null,stretchType:"none",type:"stretch"};class M{constructor(t,r,e=null,o=null){this.lij=t,this.type="raster-tile",this._memoryUsed=null,this._source=null,this._symbolizerParameters=null,this._bandIds=null,this._interpolation=null,this._dirty=!1,this._transformGrid=null,this.isRendereredSource=!1,this.symbolizerRenderer=null,this.rawPixelData=null,this.opacity=1,this.source=r,this.width=e||r.width,this.height=o||r.height}get source(){return this._source}set source(t){this._source=t,this._rasterTexture=a(this._rasterTexture),this._memoryUsed=null}get symbolizerParameters(){return this.isRendereredSource?{...g,maxCutOff:[1,1,1],factor:[1,1,1]}:this._symbolizerParameters||g}set symbolizerParameters(t){this._symbolizerParameters=t}get bandIds(){return this._bandIds}set bandIds(t){t!=null&&t.length>0?this._bandIds&&t.every((r,e)=>{var o;return!!((o=this._bandIds)!=null&&o[e])&&r===this._bandIds[e]})||(this._bandIds=t,this._dirty=!0):this._bandIds=null}get interpolation(){return this._interpolation||"nearest"}set interpolation(t){if(this._interpolation=t,this._rasterTexture!=null){const r=this._getRasterTextureInterpolation(t);this._rasterTexture.setSamplingMode(r==="bilinear"?_.LINEAR:_.NEAREST)}}get transformGrid(){return this._transformGrid}set transformGrid(t){this._transformGrid=t,this._transformGridTexture=a(this._transformGridTexture),this._memoryUsed=null}bind(t){return!!(this.source&&this.source.pixels&&this.source.pixels.length>0)&&((this._rasterTexture==null||this._dirty)&&this._updateRasterTexture(t,this.bandIds),this._rasterTexture!=null&&(this._updateColormapTexture(t),this.transformGrid&&this._transformGridTexture==null&&(this._transformGridTexture=w(t,this.transformGrid))),!0)}getUniforms(){const{symbolizerParameters:t,transformGrid:r,width:e,height:o,opacity:s}=this,n=P(r,[e,o],[this.source.width,this.source.height],s),l=S(t.colormap,t.colormapOffset),d=this.symbolizerParameters.type==="stretch"?v(this.symbolizerParameters):null,m=this.symbolizerParameters.type==="hillshade"?O(this.symbolizerParameters):null;return new G(n,l,d||m,this._rasterTexture,this._transformGridTexture,this._colormapTexture)}get isBilinearWithStretchColorRamp(){const{symbolizerParameters:t}=this;return this.interpolation==="bilinear"&&t.colormap!=null&&t.type==="stretch"}get memoryUsage(){if(this._memoryUsed==null){const t=[this._rasterTexture,this._transformGridTexture,this._colormapTexture];this._memoryUsed=t.map(r=>r!=null?r.descriptor.width*r.descriptor.height*4:0).reduce((r,e)=>r+e,0)}return this._memoryUsed}release(){return this._rasterTexture=a(this._rasterTexture),this._transformGridTexture=a(this._transformGridTexture),this._colormapTexture=a(this._colormapTexture),this.source=null,this.transformGrid=null,this.rawPixelData=null,!0}_updateRasterTexture(t,r){const e=this.source?this.source.extractBands(r):null;if(!(e!=null&&e.pixels&&e.pixels.length>0))return void(this._rasterTexture=a(this._rasterTexture));const o=r==null&&this.bandIds==null||r!=null&&this.bandIds!=null&&r.join("")===this.bandIds.join("");if(this._rasterTexture!=null&&o)return;this._rasterTexture=a(this._rasterTexture);const s=this._getRasterTextureInterpolation(this.interpolation);this._rasterTexture=C(t,e,s,this.isRendereredSource||this.hasStretchTypeNone())}hasStretchTypeNone(){return"stretchType"in this.symbolizerParameters&&this.symbolizerParameters.stretchType==="none"&&!this.symbolizerParameters.useGamma&&this.source.pixelType==="u8"}_getRasterTextureInterpolation(t){return this.symbolizerParameters.type==="lut"||t==="nearest"||t==="majority"||this.isBilinearWithStretchColorRamp?"nearest":"bilinear"}_updateColormapTexture(t){const r=this._colormap,e=this.symbolizerParameters.colormap;return e?r?e.length!==r.length||e.some((o,s)=>o!==r[s])?(this._colormapTexture=a(this._colormapTexture),this._colormapTexture=f(t,e),void(this._colormap=e)):void 0:(this._colormapTexture=f(t,e),void(this._colormap=e)):(this._colormapTexture=a(this._colormapTexture),void(this._colormap=null))}}let h=class extends L(A(R(z($)))){constructor(){super(...arguments),this.type="imagery-tile-3d",this._isAlignedMapTile=!0}initialize(){this.layer.increaseRasterJobHandlerUsage(),this.fullExtent==null&&this.addResolvingPromise(Promise.reject(new b("layerview:spatial-reference-incompatible","The layer extent cannot be projected to the view's spatial reference",{layer:this.layer})));const i=x(()=>{var t,r;return(r=(t=this.view)==null?void 0:t.basemapTerrain)==null?void 0:r.tilingSchemeLocked}).then(()=>{const t=this.view.basemapTerrain.tilingScheme,r=this.layer.tileInfo;this._isAlignedMapTile=["png","png24","png32","jpg","mixed"].includes(r.format)&&t.compatibleWith(r),this.tileInfo=this._isAlignedMapTile?r:t.toTileInfo(),this._updatingHandles.add(()=>[this.layer.renderer,this.layer.interpolation,this.layer.bandIds,this.layer.multidimensionalDefinition,this.layer.multidimensionalSubset,this.layer.rasterFunction,this.timeExtent],()=>this.refresh())});this.addResolvingPromise(i)}destroy(){this.layer.decreaseRasterJobHandlerUsage()}get _blankTile(){const i=document.createElement("canvas"),t=i.getContext("2d"),[r,e]=this.tileInfo.size;return i.width=r,i.height=e,t.clearRect(0,0,r,e),t.getImageData(0,0,r,e)}get imageFormatIsOpaque(){return this.layer.tileInfo.format==="jpg"}get hasMixedImageFormats(){return this.layer.tileInfo.format==="mixed"}get dataLevelRange(){var e,o;const i=this.layer.tileInfo,t=(e=this.tileInfo.lodAt(0))==null?void 0:e.scale,r=(o=this.layer.tileInfo.lodAt(i.lods.length-1))==null?void 0:o.scale;return this.levelRangeFromScaleRange(t,r)}_getfullExtent(){var i;return I(this.layer.serviceRasterInfo,((i=this.view.basemapTerrain)==null?void 0:i.spatialReference)??this.view.spatialReference)}async fetchTile(i,t){const r=this.tileInfo,e=this._canSymbolizeInWebGL(),o={tileInfo:r,requestRawData:e,signal:t.signal,timeExtent:this.timeExtent,requestAsImageElement:this._isAlignedMapTile,noClip:!1},{layer:s}=this,[n,l,d]=i,m=await s.fetchTile(n,l,d,o);if(m instanceof HTMLImageElement)return m;let c=m==null?void 0:m.pixelBlock;if(c==null)return this._blankTile;if(!e&&(c=await s.applyRenderer(m),c==null))return this._blankTile;const p=new M([n,l,d],c,r.size[0],r.size[1]);return e?(p.symbolizerRenderer=s.symbolizer.rendererJSON,p.symbolizerParameters=s.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(n)),p.transformGrid=m.transformGrid,p.bandIds=s.bandIds):(p.isRendereredSource=!0,p.bandIds=null),p.interpolation=s.interpolation,p}_getSymbolizerOptions(i){var r;const t=this.tileInfo.lodAt(i).resolution;return{pixelBlock:null,isGCS:((r=this.view.basemapTerrain)==null?void 0:r.spatialReference)!=null?this.view.basemapTerrain.spatialReference.isGeographic:this.view.spatialReference.isGeographic,resolution:{x:t,y:t},bandIds:this.layer.bandIds}}ensureSymbolizerParameters(i){this._canSymbolizeInWebGL()&&JSON.stringify(i.symbolizerRenderer)!==JSON.stringify(this.layer.symbolizer.rendererJSON)&&(i.symbolizerParameters=this.layer.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(i.lij[0])))}createFetchPopupFeaturesQueryGeometry(i,t){return E(i,t,this.view)}refresh(){this.emit("data-changed")}async doRefresh(){this.suspended||this.emit("data-changed")}_canSymbolizeInWebGL(){var s,n,l;const i=F(),{symbolizer:t}=this.layer,r=(n=(s=t.lookup)==null?void 0:s.colormapLut)==null?void 0:n.indexedColormap,e=!!((l=this.layer.rasterFunction)!=null&&l.hasClipFunction),o=r&&r.length>4*(i.maxTextureSize||4906);return t.canRenderInWebGL&&!o&&!e}};u([y({readOnly:!0})],h.prototype,"_blankTile",null),u([y({readOnly:!0})],h.prototype,"imageFormatIsOpaque",null),u([y({readOnly:!0})],h.prototype,"hasMixedImageFormats",null),u([y({readOnly:!0})],h.prototype,"dataLevelRange",null),h=u([T("esri.views.3d.layers.ImageryTileLayerView3D")],h);const xi=h;export{xi as default};
