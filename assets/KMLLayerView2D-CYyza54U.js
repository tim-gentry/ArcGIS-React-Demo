import{db as $,aI as k,U as z,V as B,bY as O,eE as F,dI as C,aL as T,da as N,f as U,gA as W,j4 as A,ab as H,ac as v,ad as S,ag as K}from"./index-DX0rcHuW.js";import{b as D,g as Y,d as J}from"./kmlUtils-CoLKhH3w.js";import{f as Q}from"./utils-nzDIu46v.js";import{c as P}from"./GraphicsCollection-BjA_qBYu.js";import{g as X,f as Z,b as tt}from"./Bitmap-BOJgIqqB.js";import{a as it}from"./BitmapContainer-Cz7NGMaj.js";import{f as et}from"./LayerView2D-YNhPkz7V.js";import{t as M}from"./GraphicContainer-D4nU2iZz.js";import{V as R}from"./GraphicsView2D-vu8QQV0J.js";import{y as rt}from"./LayerView-C2s9lN61.js";import{C as at,e as ot}from"./rasterProjectionHelper-ByWCXlzR.js";import{b as st}from"./WGLContainer-DyFTYdJ0.js";import{o as nt}from"./MaterialPrograms-CzNUEFsj.js";import{t as lt}from"./capabilities-C84AMSCg.js";import{D as E,G as pt,U as mt,X as L}from"./enums-BlUEVwJR.js";import{E as ht}from"./Program-BnQQlkGO.js";import{c as ct}from"./rasterUtils-C5dL3JL-.js";import{y as dt}from"./RenderingContext-DNkBZ-bu.js";import{e as j,c as ut}from"./Texture-BF0Xf23l.js";import"./mat3-Ck4GO2qT.js";import"./DefaultUI-BM5o-ZLH.js";import"./jsxFactory-DmHi7Kb2.js";import"./uuid-fwrPAdZb.js";import"./UpdatingHandles-CERUeL1P.js";import"./InputManager-abOXR3ru.js";import"./signal-CpmfLcHB.js";import"./Map-BcseqEdU.js";import"./Basemap-CjElSnyL.js";import"./loadAll-8MiqgLTH.js";import"./writeUtils-RiCb1SCd.js";import"./Ground-dhRLerDt.js";import"./CollectionFlattener-Be8YW6oV.js";import"./editableLayers-DuIVmwOk.js";import"./catalogUtils-B2PovfNH.js";import"./basemapUtils-rjdIOXhY.js";import"./TablesMixin-CcZZ6esO.js";import"./HeightModelInfo-DaJXTLDg.js";import"./ReactiveMap-r-vujrh9.js";import"./selectionUtils-DYi6daQO.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-BcEL8jIe.js";import"./a11yUtils-BcOnuh2m.js";import"./heightModelInfoUtils-CTi_JiJC.js";import"./arcgisLayerUrl-BpJodxxk.js";import"./ViewingMode-Dodu7ZZk.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-CjDcv_he.js";import"./Compass-S4M9NML1.js";import"./utils-DsJqvptN.js";import"./GoTo-Bv8U0vYJ.js";import"./NavigationToggle-Da_EVApx.js";import"./Zoom-OTCbJYcz.js";import"./vec2f32-BbH2jxlN.js";import"./DisplayObject-I7xo9JVP.js";import"./Container-BuHS0oKS.js";import"./EffectView-CZsZ4wVb.js";import"./highlightReasons-BQJ1jGcs.js";import"./Tile-B_ZCIyG8.js";import"./quickselect-D0_cvEX6.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./TileKey-m4M152GY.js";import"./definitions-ByNBSgP9.js";import"./ClipRect-DDLZgoLv.js";import"./layerViewUtils-D2JqIDZ8.js";import"./AGraphicContainer-iMgJZ5NT.js";import"./TechniqueInstance-BIriMPO0.js";import"./UpdateTracking2D-BHRIz_Fq.js";import"./BindType-BmZEZMMh.js";import"./Util-HYkJg9Vp.js";import"./vec2f64-Diu2Kaa8.js";import"./LabelMetric-aA-CNSUv.js";import"./enums-BRXbslMp.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-BhuXqU4L.js";import"./TileContainer-Cphxq3Rg.js";import"./FeatureCommandQueue-CT5xqujD.js";import"./CIMSymbolHelper-DvNaY2BT.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-BN21lj56.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./GeometryUtils-CGNDP0vy.js";import"./mat2d-CXMJJ9G6.js";import"./mat2df32-orApM5a3.js";import"./vec2-C-4tM9Uv.js";import"./Rect-CUzevAry.js";import"./BufferObject-CWTeBz1x.js";import"./VertexArrayObject-9V6uZ6_q.js";import"./heatmapTextureUtils-Cp303dtW.js";import"./constants-D5zmR9t2.js";import"./QueueProcessor-01Ee2ByR.js";import"./vec3f32-Cw9Q6TO_.js";import"./normalizeUtils-CzEkgn6d.js";import"./normalizeUtilsCommon-DXRtgGFh.js";import"./utils-D67OULxu.js";import"./AttributeStore-qiTY00FJ.js";import"./labelFormatUtils-DjuAeSua.js";import"./TimeOnly-DZBbU_oj.js";import"./centroid-DdLmOD72.js";import"./featureConversionUtils-C8uvc1AG.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./timeSupport-BrCiU-ir.js";import"./json-Wa8cmqdu.js";import"./normalizeUtilsSync--5Av753T.js";import"./WGLBrushVTLSymbol-De0GmzRI.js";import"./vec4f32-CjrfB-0a.js";import"./StyleDefinition-BK3ROBTO.js";import"./config-MDUrh2eL.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-Ddp-btlS.js";import"./DefaultVertexAttributeLayouts-_lUGuBk_.js";import"./earcut-BqgeR2O3.js";import"./MapView-D7swOHse.js";import"./Viewpoint-sw4jiA6m.js";import"./Cyclical-CEj-eenM.js";import"./TileInfo-DuivnO5H.js";import"./TileKey-DZd6gJy7.js";import"./viewpointUtils-BG1_rfM2.js";import"./mat2df64-CBKYtunK.js";import"./unitBezier-BX6NeAEr.js";import"./TileStrategy-CcsveE-I.js";import"./utils-CXgSw6Sd.js";import"./ColorBackground-UV5G2K2b.js";import"./programUtils-CwiKxPbA.js";import"./ProgramCache-DLTjjJNh.js";import"./NestedMap-DgiGbX8E.js";import"./renderState-yUi34s5A.js";import"./basicInterfaces-wONHx_SN.js";import"./interfaces-B8ge7Jg9.js";import"./testSVGPremultipliedAlpha-eKesxQ43.js";import"./floatRGBA-DZ6CgOhi.js";import"./doublePrecisionUtils-B0owpBza.js";class m{constructor(t){if(this._ownsRctx=!1,t)this._ownsRctx=!1,this._rctx=t;else{if(m._instance)return m._instanceRefCount++,m._instance;m._instanceRefCount=1,m._instance=this,this._ownsRctx=!0;const e=document.createElement("canvas"),r=lt(e);r.getExtension("OES_texture_float"),this._rctx=new dt(r,{})}const a={applyProjection:!0,bilinear:!1,bicubic:!1},o=nt("raster/reproject","raster/reproject",new Map([["a_position",0]]),a);this._program=this._rctx.programCache.acquire(o.shaders.vertexShader,o.shaders.fragmentShader,o.attributes),this._rctx.useProgram(this._program),this._program.setUniform1f("u_opacity",1),this._program.setUniform1i("u_image",0),this._program.setUniform1i("u_flipY",0),this._program.setUniform1i("u_transformGrid",1),this._quad=new st(this._rctx,[0,0,1,0,0,1,1,1])}reprojectTexture(t,a,o=!1){const e=$(t.extent,a),r=new k({x:(t.extent.xmax-t.extent.xmin)/t.texture.descriptor.width,y:(t.extent.ymax-t.extent.ymin)/t.texture.descriptor.height,spatialReference:t.extent.spatialReference}),{x:s,y:p}=at(r,a,t.extent);let n=(s+p)/2;const l=Math.round((e.xmax-e.xmin)/n),u=Math.round((e.ymax-e.ymin)/n);n=(e.width/l+e.height/u)/2;const I=new k({x:n,y:n,spatialReference:e.spatialReference}),_=ot({projectedExtent:e,srcBufferExtent:t.extent,pixelSize:I,hasWrapAround:!0,spacing:[16,16]}),w=ct(this._rctx,_),f=new j(l,u);f.wrapMode=E.CLAMP_TO_EDGE;const h=new ht(this._rctx,f);this._rctx.bindFramebuffer(h),this._rctx.setViewport(0,0,l,u),this._rctx.useProgram(this._program),this._rctx.bindTexture(t.texture,0),this._rctx.bindTexture(w,1),this._quad.bind();const{width:y=0,height:x=0}=t.texture.descriptor;if(this._program.setUniform2f("u_srcImageSize",y,x),this._program.setUniform2fv("u_transformSpacing",_.spacing),this._program.setUniform2fv("u_transformGridSize",_.size),this._program.setUniform2f("u_targetImageSize",l,u),this._quad.draw(),this._quad.unbind(),this._rctx.useProgram(null),this._rctx.bindFramebuffer(null),w.dispose(),o){const{width:c,height:V}=h,g=new ImageData(c??0,V??0);h.readPixels(0,0,c??0,V??0,pt.RGBA,mt.UNSIGNED_BYTE,g.data);const G=h.detachColorTexture(L.COLOR_ATTACHMENT0);return h.dispose(),{texture:G,extent:e,imageData:g}}const b=h.detachColorTexture(L.COLOR_ATTACHMENT0);return h.dispose(),{texture:b,extent:e}}reprojectBitmapData(t,a){const o=X(t.bitmapData)?Z(t.bitmapData):t.bitmapData,e=new j;e.wrapMode=E.CLAMP_TO_EDGE,e.width=t.bitmapData.width,e.height=t.bitmapData.height;const r=new ut(this._rctx,e,o),s=this.reprojectTexture({texture:r,extent:t.extent},a,!0);s.texture.dispose();const p=document.createElement("canvas"),n=s.imageData;return p.width=n.width,p.height=n.height,p.getContext("2d").putImageData(n,0,0),{bitmapData:p,extent:s.extent}}async loadAndReprojectBitmapData(t,a,o){const e=(await z(t,{responseType:"image"})).data,r=document.createElement("canvas");r.width=e.width,r.height=e.height;const s=r.getContext("2d");s.drawImage(e,0,0);const p=s.getImageData(0,0,r.width,r.height);if(a.spatialReference.equals(o))return{bitmapData:p,extent:a};const n=this.reprojectBitmapData({bitmapData:p,extent:a},o);return{bitmapData:n.bitmapData,extent:n.extent}}destroy(){this._ownsRctx?(m._instanceRefCount--,m._instanceRefCount===0&&(this._quad.dispose(),this._program.dispose(),this._rctx.dispose(),m._instance=null)):(this._quad.dispose(),this._program.dispose())}}m._instanceRefCount=0;class q{constructor(){this.allSublayers=new Map,this.allPoints=[],this.allPolylines=[],this.allPolygons=[],this.allMapImages=[]}}let d=class extends et(rt){constructor(){super(...arguments),this._bitmapIndex=new Map,this._mapImageContainer=new it,this._kmlVisualData=new q,this._fetchController=null,this.allVisiblePoints=new P,this.allVisiblePolylines=new P,this.allVisiblePolygons=new P,this.allVisibleMapImages=new B}async hitTest(i,t){var o,e,r;const a=this.layer;return[(o=this._pointsView)==null?void 0:o.hitTest(i),(e=this._polylinesView)==null?void 0:e.hitTest(i),(r=this._polygonsView)==null?void 0:r.hitTest(i)].flat().filter(Boolean).map(s=>(s.layer=a,s.sourceLayer=a,{type:"graphic",graphic:s,layer:a,mapPoint:i}))}update(i){this._polygonsView&&this._polygonsView.processUpdate(i),this._polylinesView&&this._polylinesView.processUpdate(i),this._pointsView&&this._pointsView.processUpdate(i)}attach(){this._fetchController=new AbortController,this.container.addChild(this._mapImageContainer),this._polygonsView=new R({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new M(this.view.featuresTilingScheme)}),this.container.addChild(this._polygonsView.container),this._polylinesView=new R({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),container:new M(this.view.featuresTilingScheme)}),this.container.addChild(this._polylinesView.container),this._pointsView=new R({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new M(this.view.featuresTilingScheme)}),this.container.addChild(this._pointsView.container),this.addAttachHandles([this.allVisibleMapImages.on("change",i=>{i.added.forEach(t=>this._addMapImage(t)),i.removed.forEach(t=>this._removeMapImage(t))}),O(()=>this.layer.visibleSublayers,i=>{for(const[t,a]of this._kmlVisualData.allSublayers)a.visibility=0;for(const t of i){const a=this._kmlVisualData.allSublayers.get(t.id);a&&(a.visibility=1)}this._refreshCollections()})]),this._updatingHandles.addPromise(this._fetchService(this._fetchController.signal)),this._imageReprojector=new m}detach(){this._fetchController=F(this._fetchController),this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView=C(this._polygonsView),this._polylinesView=C(this._polylinesView),this._pointsView=C(this._pointsView),this._imageReprojector=C(this._imageReprojector)}viewChange(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange()}moveEnd(){}isUpdating(){return this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating}_addMapImage(i){var t,a;((t=this.view.spatialReference)!=null&&t.isWGS84||(a=this.view.spatialReference)!=null&&a.isWebMercator)&&this._imageReprojector.loadAndReprojectBitmapData(i.href,T.fromJSON(i.extent),this.view.spatialReference).then(o=>{const e=new tt(o.bitmapData);e.x=o.extent.xmin,e.y=o.extent.ymax,e.resolution=o.extent.width/o.bitmapData.width,e.rotation=i.rotation,this._mapImageContainer.addChild(e),this._bitmapIndex.set(i,e)})}async _getViewDependentUrl(i,t){const{viewFormat:a,viewBoundScale:o,httpQuery:e}=i;if(a!=null){if(t==null)throw new Error("Loading this network link requires a view state.");let r;if(await N(),o!=null&&o!==1){const c=new T(t.extent);c.expand(o),r=c}else r=t.extent;r=$(r,U.WGS84);const s=$(r,U.WebMercator),p=r.xmin,n=r.xmax,l=r.ymin,u=r.ymax,I=t.size[0]*t.pixelRatio,_=t.size[1]*t.pixelRatio,w=Math.max(s.width,s.height),f={"[bboxWest]":p.toString(),"[bboxEast]":n.toString(),"[bboxSouth]":l.toString(),"[bboxNorth]":u.toString(),"[lookatLon]":r.center.x.toString(),"[lookatLat]":r.center.y.toString(),"[lookatRange]":w.toString(),"[lookatTilt]":"0","[lookatHeading]":t.rotation.toString(),"[lookatTerrainLon]":r.center.x.toString(),"[lookatTerrainLat]":r.center.y.toString(),"[lookatTerrainAlt]":"0","[cameraLon]":r.center.x.toString(),"[cameraLat]":r.center.y.toString(),"[cameraAlt]":w.toString(),"[horizFov]":"60","[vertFov]":"60","[horizPixels]":I.toString(),"[vertPixels]":_.toString(),"[terrainEnabled]":"0","[clientVersion]":W,"[kmlVersion]":"2.2","[clientName]":"ArcGIS API for JavaScript","[language]":"en-US"},h=c=>{for(const V in c){let g;for(g in f)c[V]=c[V].replace(g,f[g])}},y=A(a);h(y);let x={};e!=null&&(x=A(e),h(x));const b=Q(i.href);return b.query={...b.query,...y,...x},`${b.path}?${H(y)}`}return i.href}async _fetchService(i){const t=new q;await this._loadVisualData(this.layer.url,t,i),this._kmlVisualData=t,this._refreshCollections()}_refreshCollections(){this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i)),this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i)),this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i)),this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i))}_isSublayerVisible(i){const t=this._kmlVisualData.allSublayers.get(i);return!!(t!=null&&t.visibility)&&(t.parentFolderId===-1||this._isSublayerVisible(t.parentFolderId))}_loadVisualData(i,t,a){return this._fetchParsedKML(i,a).then(async o=>{for(const e of o.sublayers){t.allSublayers.set(e.id,e);const r=e.points?await D(e.points):[],s=e.polylines?await D(e.polylines):[],p=e.polygons?await D(e.polygons):[],n=e.mapImages||[];if(t.allPoints.push(...r.map(l=>({item:l,sublayerId:e.id}))),t.allPolylines.push(...s.map(l=>({item:l,sublayerId:e.id}))),t.allPolygons.push(...p.map(l=>({item:l,sublayerId:e.id}))),t.allMapImages.push(...n.map(l=>({item:l,sublayerId:e.id}))),e.networkLink){const l=await this._getViewDependentUrl(e.networkLink,this.view.state);await this._loadVisualData(l,t,a)}}})}_fetchParsedKML(i,t){return Y(i,this.layer.spatialReference,this.layer.refreshInterval,t).then(a=>J(a.data))}_removeMapImage(i){const t=this._bitmapIndex.get(i);t&&(this._mapImageContainer.removeChild(t),this._bitmapIndex.delete(i))}};v([S()],d.prototype,"_pointsView",void 0),v([S()],d.prototype,"_polylinesView",void 0),v([S()],d.prototype,"_polygonsView",void 0),v([S()],d.prototype,"updating",void 0),d=v([K("esri.views.2d.layers.KMLLayerView2D")],d);const ze=d;export{ze as default};
