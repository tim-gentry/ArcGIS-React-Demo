import{V as n,fa as u,b6 as h,ar as g,bY as c,ac as m,ad as d,ag as _}from"./index-DX0rcHuW.js";import{l as w}from"./CollectionFlattener-Be8YW6oV.js";import{c as y,y as f,C as k,T as V,j as M,S as I}from"./RouteInfo-BxlWrCyV.js";import{w as v}from"./Stop-BeREvzhv.js";import{t as G}from"./highlightReasons-BQJ1jGcs.js";import{f as F}from"./LayerView2D-YNhPkz7V.js";import{t as H}from"./GraphicContainer-D4nU2iZz.js";import{V as C}from"./GraphicsView2D-vu8QQV0J.js";import{y as b}from"./LayerView-C2s9lN61.js";import"./networkEnums-DshobRbj.js";import"./Tile-B_ZCIyG8.js";import"./quickselect-D0_cvEX6.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./TileKey-m4M152GY.js";import"./Container-BuHS0oKS.js";import"./DefaultUI-BM5o-ZLH.js";import"./jsxFactory-DmHi7Kb2.js";import"./uuid-fwrPAdZb.js";import"./UpdatingHandles-CERUeL1P.js";import"./InputManager-abOXR3ru.js";import"./signal-CpmfLcHB.js";import"./Map-BcseqEdU.js";import"./Basemap-CjElSnyL.js";import"./loadAll-8MiqgLTH.js";import"./writeUtils-RiCb1SCd.js";import"./Ground-dhRLerDt.js";import"./editableLayers-DuIVmwOk.js";import"./catalogUtils-B2PovfNH.js";import"./basemapUtils-rjdIOXhY.js";import"./TablesMixin-CcZZ6esO.js";import"./GraphicsCollection-BjA_qBYu.js";import"./HeightModelInfo-DaJXTLDg.js";import"./ReactiveMap-r-vujrh9.js";import"./selectionUtils-DYi6daQO.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-BcEL8jIe.js";import"./a11yUtils-BcOnuh2m.js";import"./heightModelInfoUtils-CTi_JiJC.js";import"./arcgisLayerUrl-BpJodxxk.js";import"./ViewingMode-Dodu7ZZk.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-CjDcv_he.js";import"./Compass-S4M9NML1.js";import"./utils-DsJqvptN.js";import"./GoTo-Bv8U0vYJ.js";import"./NavigationToggle-Da_EVApx.js";import"./Zoom-OTCbJYcz.js";import"./EffectView-CZsZ4wVb.js";import"./DisplayObject-I7xo9JVP.js";import"./definitions-ByNBSgP9.js";import"./enums-BlUEVwJR.js";import"./Texture-BF0Xf23l.js";import"./ClipRect-DDLZgoLv.js";import"./layerViewUtils-D2JqIDZ8.js";import"./AGraphicContainer-iMgJZ5NT.js";import"./TechniqueInstance-BIriMPO0.js";import"./UpdateTracking2D-BHRIz_Fq.js";import"./BindType-BmZEZMMh.js";import"./Util-HYkJg9Vp.js";import"./vec2f64-Diu2Kaa8.js";import"./Program-BnQQlkGO.js";import"./BufferObject-CWTeBz1x.js";import"./LabelMetric-aA-CNSUv.js";import"./enums-BRXbslMp.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-BhuXqU4L.js";import"./vec2f32-BbH2jxlN.js";import"./TileContainer-Cphxq3Rg.js";import"./WGLContainer-DyFTYdJ0.js";import"./VertexArrayObject-9V6uZ6_q.js";import"./WGLBrushVTLSymbol-De0GmzRI.js";import"./vec4f32-CjrfB-0a.js";import"./StyleDefinition-BK3ROBTO.js";import"./config-MDUrh2eL.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-Ddp-btlS.js";import"./DefaultVertexAttributeLayouts-_lUGuBk_.js";import"./mat3-Ck4GO2qT.js";import"./mat2df32-orApM5a3.js";import"./mat2d-CXMJJ9G6.js";import"./vec3f32-Cw9Q6TO_.js";import"./earcut-BqgeR2O3.js";import"./vec2-C-4tM9Uv.js";import"./featureConversionUtils-C8uvc1AG.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./MapView-D7swOHse.js";import"./Viewpoint-sw4jiA6m.js";import"./Cyclical-CEj-eenM.js";import"./TileInfo-DuivnO5H.js";import"./TileKey-DZd6gJy7.js";import"./viewpointUtils-BG1_rfM2.js";import"./mat2df64-CBKYtunK.js";import"./normalizeUtils-CzEkgn6d.js";import"./normalizeUtilsCommon-DXRtgGFh.js";import"./utils-nzDIu46v.js";import"./utils-D67OULxu.js";import"./unitBezier-BX6NeAEr.js";import"./TileStrategy-CcsveE-I.js";import"./QueueProcessor-01Ee2ByR.js";import"./utils-CXgSw6Sd.js";import"./ColorBackground-UV5G2K2b.js";import"./FeatureCommandQueue-CT5xqujD.js";import"./CIMSymbolHelper-DvNaY2BT.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-BN21lj56.js";import"./GeometryUtils-CGNDP0vy.js";import"./Rect-CUzevAry.js";import"./heatmapTextureUtils-Cp303dtW.js";import"./constants-D5zmR9t2.js";import"./AttributeStore-qiTY00FJ.js";import"./labelFormatUtils-DjuAeSua.js";import"./TimeOnly-DZBbU_oj.js";import"./centroid-DdLmOD72.js";import"./timeSupport-BrCiU-ir.js";import"./json-Wa8cmqdu.js";import"./normalizeUtilsSync--5Av753T.js";const $=["route-info","direction-line","direction-point","polygon-barrier","polyline-barrier","point-barrier","stop"],p={graphic:null,property:null,oldValue:null,newValue:null};function l(t){return t instanceof y||t instanceof f||t instanceof k||t instanceof V||t instanceof M||t instanceof I||t instanceof v}function U(t){return n.isCollection(t)&&t.length&&l(t.at(0))}function A(t){return Array.isArray(t)&&t.length>0&&l(t[0])}let s=class extends F(b){constructor(){super(...arguments),this._graphics=new n,this._highlightIds=new Map,this._networkFeatureMap=new Map,this._networkGraphicMap=new Map}get _routeItems(){return new w({getCollections:()=>this.layer==null||this.destroyed?[]:[this.layer.routeInfo!=null?new n([this.layer.routeInfo]):null,this.layer.directionLines,this.layer.directionPoints,this.layer.polygonBarriers,this.layer.polylineBarriers,this.layer.pointBarriers,this.layer.stops]})}initialize(){this._updatingHandles.addOnCollectionChange(()=>this._routeItems,t=>this._routeItemsChanged(t),u)}destroy(){var t;this._networkFeatureMap.clear(),this._networkGraphicMap.clear(),this._graphics.removeAll(),(t=this._get("_routeItems"))==null||t.destroy()}attach(){this._createGraphicsView()}detach(){this._destroyGraphicsView()}async fetchPopupFeaturesAtLocation(t,i){return this._graphicsView.hitTest(t).filter(({popupTemplate:r})=>!!r)}highlight(t){let i;i=l(t)?[this._getNetworkFeatureUid(t)]:A(t)?t.map(e=>this._getNetworkFeatureUid(e)):U(t)?t.map(e=>this._getNetworkFeatureUid(e)).toArray():[t.uid];const r=i.filter(h);return r.length?(this._addHighlight(r),g(()=>this._removeHighlight(r))):g()}async hitTest(t,i){if(this.suspended)return null;const r=this._graphicsView.hitTest(t).filter(h).map(o=>this._networkGraphicMap.get(o));if(!r.length)return null;const{layer:e}=this;return r.reverse().map(o=>({type:"route",layer:e,mapPoint:t,networkFeature:o}))}isUpdating(){return this._graphicsView.updating}moveEnd(){}update(t){this._graphicsView.processUpdate(t)}viewChange(){this._graphicsView.viewChange()}_addHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const r=this._highlightIds.get(i);this._highlightIds.set(i,r+1)}else this._highlightIds.set(i,1);this._updateHighlight()}_createGraphic(t){const i=t.toGraphic();return i.layer=this.layer,i.sourceLayer=this.layer,i}_createGraphicsView(){const t=this.view,i=()=>this.requestUpdate(),r=new H(t.featuresTilingScheme);this._graphicsView=new C({container:r,graphics:this._graphics,requestUpdateCallback:i,view:t}),this.container.addChild(r),this._updateHighlight()}_destroyGraphicsView(){this.container.removeChild(this._graphicsView.container),this._graphicsView.destroy()}_getDrawOrder(t){const i=this._networkGraphicMap.get(t);return $.indexOf(i.type)}_getNetworkFeatureUid(t){return this._networkFeatureMap.has(t)?this._networkFeatureMap.get(t).uid:null}_removeHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const r=this._highlightIds.get(i)-1;r===0?this._highlightIds.delete(i):this._highlightIds.set(i,r)}this._updateHighlight()}_routeItemsChanged(t){if(t.removed.length){this._graphics.removeMany(t.removed.map(i=>{const r=this._networkFeatureMap.get(i);return this._networkFeatureMap.delete(i),this._networkGraphicMap.delete(r),r}));for(const i of t.removed)this.removeHandles(i)}if(t.added.length){this._graphics.addMany(t.added.map(i=>{const r=this._createGraphic(i);return r.symbol==null?null:(this._networkFeatureMap.set(i,r),this._networkGraphicMap.set(r,i),r)}).filter(h));for(const i of t.added)this.addHandles([c(()=>i.geometry,(r,e)=>{this._updateGraphic(i,"geometry",r,e)}),c(()=>i.symbol,(r,e)=>{this._updateGraphic(i,"symbol",r,e)})],i);this._graphics.sort((i,r)=>this._getDrawOrder(i)-this._getDrawOrder(r))}}_updateGraphic(t,i,r,e){if(!this._networkFeatureMap.has(t)){const a=this._createGraphic(t);return this._networkFeatureMap.set(t,a),this._networkGraphicMap.set(a,t),void this._graphics.add(a)}const o=this._networkFeatureMap.get(t);o[i]=r,p.graphic=o,p.property=i,p.oldValue=e,p.newValue=r,this._graphicsView.graphicUpdateHandler(p)}_updateHighlight(){const t=Array.from(this._highlightIds.keys()),i=G("highlight");this._graphicsView.setHighlight(t.map(r=>({objectId:r,highlightFlags:i})))}};m([d()],s.prototype,"_graphics",void 0),m([d()],s.prototype,"_routeItems",null),s=m([_("esri.views.2d.layers.RouteLayerView2D")],s);const Ri=s;export{Ri as default};
