import{i as k}from"./CIMResourceManager-DXkyYiyD.js";import{e as _,a as E,K as F}from"./CIMSymbolHelper-DvNaY2BT.js";import{hf as P,hg as G}from"./index-DX0rcHuW.js";import"./fontUtils-BN21lj56.js";import"./imageUtils-BsB3EL45.js";import"./BidiEngine-BwB1Df7c.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./GeometryUtils-CGNDP0vy.js";import"./enums-BRXbslMp.js";import"./definitions-ByNBSgP9.js";import"./mat2d-CXMJJ9G6.js";import"./mat2df32-orApM5a3.js";import"./vec2-C-4tM9Uv.js";import"./vec2f32-BbH2jxlN.js";import"./Rect-CUzevAry.js";import"./BoundingBox-BhuXqU4L.js";const q=96/72;class Y{constructor(y){this._spatialReference=y,this._imageDataCanvas=null,this._cimResourceManager=new k}get _canvas(){return this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas")),this._imageDataCanvas}get resourceManager(){return this._cimResourceManager}async rasterizeCIMSymbolAsync(y,u,w,f,s,i,n,o,M){if(!y)return null;const{data:c}=y;if(!c||c.type!=="CIMSymbolReference"||!c.symbol)return null;const{symbol:C}=c;i||(i=P(C));const a=await G.resolveSymbolOverrides(c,u,this._spatialReference,s,i,n,o),l=this._cimResourceManager,d=[];_.fetchResources(a,l,d),_.fetchFonts(a,l,d),d.length>0&&await Promise.all(d);const{width:t,height:r}=w,R=D(i,t,r,f),e=_.getEnvelope(a,R,l);if(!e)return null;let h=1,I=0,v=0;switch(C.type){case"CIMPointSymbol":case"CIMTextSymbol":{let m=1;e.width>t&&(m=t/e.width);let p=1;e.height>r&&(p=r/e.height),f==="preview"&&(e.width<t&&(m=t/e.width),e.height<r&&(p=r/e.height)),h=Math.min(m,p),I=e.x+e.width/2,v=e.y+e.height/2}break;case"CIMLineSymbol":{(M||e.height>r)&&(h=r/e.height),v=e.y+e.height/2;const m=e.x*h+t/2,p=(e.x+e.width)*h+t/2,{paths:b}=R;b[0][0][0]-=m/h,b[0][2][0]-=(p-t)/h}break;case"CIMPolygonSymbol":{I=e.x+e.width/2,v=e.y+e.height/2;const m=e.x*h+t/2,p=(e.x+e.width)*h+t/2,b=e.y*h+r/2,S=(e.y+e.height)*h+r/2,{rings:g}=R;m<0&&(g[0][0][0]-=m,g[0][3][0]-=m,g[0][4][0]-=m),b<0&&(g[0][0][1]+=b,g[0][1][1]+=b,g[0][4][1]+=b),p>t&&(g[0][1][0]-=p-t,g[0][2][0]-=p-t),S>r&&(g[0][2][1]+=S-r,g[0][3][1]+=S-r)}}const z={type:"cim",data:{type:"CIMSymbolReference",symbol:a}};return this.rasterize(z,t,r,I,v,h,i,1,R)}rasterize(y,u,w,f,s,i,n,o=0,M=null){const{data:c}=y;if(!c||c.type!=="CIMSymbolReference"||!c.symbol)return null;const{symbol:C}=c,a=this._canvas,l=(window.devicePixelRatio||1)*q;a.width=u*l,a.height=w*l,n||(n=P(C)),M||(M=D(n,u,w,"legend")),a.width+=2*o,a.height+=2*o;const d=a.getContext("2d",{willReadFrequently:!0}),t=F.createIdentity();return t.translate(-f,-s),t.scale(i*l,-i*l),t.translate(u*l/2+o,w*l/2+o),d.clearRect(0,0,a.width,a.height),new E(d,this._cimResourceManager,t,!0).drawSymbol(C,M),d.getImageData(0,0,a.width,a.height)}}function D(x,y,u,w){const s=-y/2+1,i=y/2-1,n=u/2-1,o=-u/2+1;switch(x){case"esriGeometryPoint":return{x:0,y:0};case"esriGeometryPolyline":return{paths:[[[s,0],[0,0],[i,0]]]};default:return w==="legend"?{rings:[[[s,n],[i,0],[i,o],[s,o],[s,n]]]}:{rings:[[[s,n],[i,n],[i,o],[s,o],[s,n]]]}}}export{Y as CIMSymbolRasterizer};
