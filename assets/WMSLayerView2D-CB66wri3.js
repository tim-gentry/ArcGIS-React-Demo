import{ap as M,n as R,bY as S,dI as q,aL as U,ac as h,ad as x,ag as I}from"./index-DX0rcHuW.js";import{a as w}from"./BitmapContainer-Cz7NGMaj.js";import{f as E}from"./LayerView2D-YNhPkz7V.js";import{_ as H}from"./ExportStrategy-BRvTFXI8.js";import{y as L}from"./LayerView-C2s9lN61.js";import{i as W}from"./RefreshableLayerView-C2j9J409.js";import{m as A}from"./WMSLayerView-D4GTp8uc.js";import"./WGLContainer-DyFTYdJ0.js";import"./definitions-ByNBSgP9.js";import"./LabelMetric-aA-CNSUv.js";import"./enums-BRXbslMp.js";import"./Texture-BF0Xf23l.js";import"./enums-BlUEVwJR.js";import"./Program-BnQQlkGO.js";import"./BufferObject-CWTeBz1x.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-BhuXqU4L.js";import"./vec2f32-BbH2jxlN.js";import"./VertexArrayObject-9V6uZ6_q.js";import"./WGLBrushVTLSymbol-De0GmzRI.js";import"./DefaultUI-BM5o-ZLH.js";import"./jsxFactory-DmHi7Kb2.js";import"./uuid-fwrPAdZb.js";import"./UpdatingHandles-CERUeL1P.js";import"./InputManager-abOXR3ru.js";import"./signal-CpmfLcHB.js";import"./Map-BcseqEdU.js";import"./Basemap-CjElSnyL.js";import"./loadAll-8MiqgLTH.js";import"./writeUtils-RiCb1SCd.js";import"./Ground-dhRLerDt.js";import"./CollectionFlattener-Be8YW6oV.js";import"./editableLayers-DuIVmwOk.js";import"./catalogUtils-B2PovfNH.js";import"./basemapUtils-rjdIOXhY.js";import"./TablesMixin-CcZZ6esO.js";import"./GraphicsCollection-BjA_qBYu.js";import"./HeightModelInfo-DaJXTLDg.js";import"./ReactiveMap-r-vujrh9.js";import"./selectionUtils-DYi6daQO.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-BcEL8jIe.js";import"./a11yUtils-BcOnuh2m.js";import"./heightModelInfoUtils-CTi_JiJC.js";import"./arcgisLayerUrl-BpJodxxk.js";import"./ViewingMode-Dodu7ZZk.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-CjDcv_he.js";import"./Compass-S4M9NML1.js";import"./utils-DsJqvptN.js";import"./GoTo-Bv8U0vYJ.js";import"./NavigationToggle-Da_EVApx.js";import"./Zoom-OTCbJYcz.js";import"./vec4f32-CjrfB-0a.js";import"./StyleDefinition-BK3ROBTO.js";import"./config-MDUrh2eL.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-Ddp-btlS.js";import"./DefaultVertexAttributeLayouts-_lUGuBk_.js";import"./mat3-Ck4GO2qT.js";import"./DisplayObject-I7xo9JVP.js";import"./TileKey-m4M152GY.js";import"./mat2df32-orApM5a3.js";import"./mat2d-CXMJJ9G6.js";import"./vec3f32-Cw9Q6TO_.js";import"./Container-BuHS0oKS.js";import"./EffectView-CZsZ4wVb.js";import"./highlightReasons-BQJ1jGcs.js";import"./Tile-B_ZCIyG8.js";import"./quickselect-D0_cvEX6.js";import"./earcut-BqgeR2O3.js";import"./vec2-C-4tM9Uv.js";import"./vec2f64-Diu2Kaa8.js";import"./featureConversionUtils-C8uvc1AG.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./MapView-D7swOHse.js";import"./Viewpoint-sw4jiA6m.js";import"./Cyclical-CEj-eenM.js";import"./TileInfo-DuivnO5H.js";import"./TileKey-DZd6gJy7.js";import"./viewpointUtils-BG1_rfM2.js";import"./mat2df64-CBKYtunK.js";import"./normalizeUtils-CzEkgn6d.js";import"./normalizeUtilsCommon-DXRtgGFh.js";import"./utils-nzDIu46v.js";import"./utils-D67OULxu.js";import"./unitBezier-BX6NeAEr.js";import"./TileStrategy-CcsveE-I.js";import"./QueueProcessor-01Ee2ByR.js";import"./utils-CXgSw6Sd.js";import"./ColorBackground-UV5G2K2b.js";import"./ClipRect-DDLZgoLv.js";import"./layerViewUtils-D2JqIDZ8.js";import"./Bitmap-BOJgIqqB.js";import"./ExportWMSImageParameters-XILMdRDN.js";import"./timeSupport-BW78MsMT.js";import"./timeUtils-CovJpMS2.js";import"./tagSymbols-BPcGfZon.js";let m=class extends A(W(E(L))){constructor(){super(...arguments),this.bitmapContainer=new w}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}update(t){this.strategy.update(t).catch(i=>{M(i)||R.getLogger(this).error(i)})}attach(){const{layer:t}=this,{imageMaxHeight:i,imageMaxWidth:o}=t;this.bitmapContainer=new w,this.container.addChild(this.bitmapContainer),this.strategy=new H({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:i,imageMaxWidth:o,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.addAttachHandles(S(()=>this.exportImageVersion,()=>this.requestUpdate()))}detach(){this.strategy=q(this.strategy),this.container.removeAllChildren()}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(t){const{view:i,bitmapContainer:o}=this,{x:p,y:e}=t,{spatialReference:b}=i;let r,a=0,d=0;if(o.children.some($=>{const{width:c,height:g,resolution:y,x:s,y:n}=$,l=s+y*c,f=n-y*g;return p>=s&&p<=l&&e<=n&&e>=f&&(r=new U({xmin:s,ymin:f,xmax:l,ymax:n,spatialReference:b}),a=c,d=g,!0)}),!r)return null;const u=r.width/a,v=Math.round((p-r.xmin)/u),C=Math.round((r.ymax-e)/u);return{extent:r,width:a,height:d,x:v,y:C}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,i,o,p){return this.layer.fetchImageBitmap(t,i,o,{timeExtent:this.timeExtent,...p})}};h([x()],m.prototype,"strategy",void 0),h([x()],m.prototype,"updating",void 0),m=h([I("esri.views.2d.layers.WMSLayerView2D")],m);const Hi=m;export{Hi as default};
