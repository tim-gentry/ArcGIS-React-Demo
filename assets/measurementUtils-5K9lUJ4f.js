import{d3 as h,d5 as p,d6 as m,dm as $,c$ as c,dk as l,bq as g,d0 as d,bp as u}from"./index-DX0rcHuW.js";import{V as b}from"./sphere-COyqsaGw.js";import{U as M}from"./mathUtils-BsqbT0oM.js";import{o as x}from"./geodesicAreaMeasurementUtils-BGWtxsMO.js";function k(t,n){const i=b(n);h(i,0,0,0);for(let r=0;r<t.length;++r)p(i,i,t[r]);m(i,i,1/t.length);let a=0;for(let r=0;r<t.length;++r)a=Math.max(a,$(i,t[r]));n[3]=Math.sqrt(a)}function z(t,n){if(t.length<3)throw new Error("need at least 3 points to fit a plane");M(t[0],t[1],t[2],n)}function E(t,n){return c(t,n)+t[3]}function P(t,n,i,a){const r=y;return l(r.rings[0][0],t),l(r.rings[0][1],n),l(r.rings[0][2],i),l(r.rings[0][3],t),r.spatialReference=a,x(r)}function T(t,n=null,i=!0){const r=(o,f)=>{if(f[0]===0&&f[1]===0&&f[2]===0)return!1;for(let s=0;s<o.length;++s)if(c(f,o[s])<-1e-6)return!1;return!0};if(t.length===0)return!1;if(t.length===1)return n&&l(n,t[0]),!0;h(e,0,0,0);for(let o=0;o<t.length;++o)p(e,e,t[o]);if(g(e,e),r(t,e))return n&&l(n,e),!0;if(!i)return!1;for(let o=0;o<t.length;++o)for(let f=0;f<t.length;++f)if(o!==f&&(d(e,t[o],t[f]),g(e,e),r(t,e)))return n&&l(n,e),!0;return!1}function U(t){return t.pointerType!=="mouse"||t.button===0}const y={hasM:!1,hasZ:!0,rings:[[u(),u(),u(),u()]],spatialReference:null,type:"polygon"},e=u();export{U as M,k as g,z as h,T as j,P as m,E as p};
