import{j6 as j,bZ as J,fa as x,hn as X,ee as k,db as _,aJ as B,dG as M,aI as R,cC as K,d as w,g9 as Z,eD as U,eC as q,dI as W,bY as $,ac as C,ad as V,ag as Q}from"./index-DX0rcHuW.js";import tt from"./GraphicsLayer-SBXo_p0G.js";import{i as F}from"./TelemetryDisplay-CYvyWenP.js";import{f as et}from"./OverlayContainer-DhV7X1x1.js";import{n as it}from"./vec2f64-Diu2Kaa8.js";import{s as rt}from"./DisplayObject-I7xo9JVP.js";import{a as st,f as ot}from"./LayerView2D-YNhPkz7V.js";import{c as H}from"./BufferObject-CWTeBz1x.js";import{D as nt,F as I,E as at}from"./enums-BlUEVwJR.js";import{e as lt,c as mt}from"./Texture-BF0Xf23l.js";import{o as ht}from"./VertexArrayObject-9V6uZ6_q.js";import{t as pt}from"./GraphicContainer-D4nU2iZz.js";import{V as yt}from"./GraphicsView2D-vu8QQV0J.js";import{y as ct}from"./LayerView-C2s9lN61.js";import"./GraphicsCollection-BjA_qBYu.js";import"./mat3-Ck4GO2qT.js";import"./DefaultUI-BM5o-ZLH.js";import"./jsxFactory-DmHi7Kb2.js";import"./uuid-fwrPAdZb.js";import"./UpdatingHandles-CERUeL1P.js";import"./InputManager-abOXR3ru.js";import"./signal-CpmfLcHB.js";import"./Map-BcseqEdU.js";import"./Basemap-CjElSnyL.js";import"./loadAll-8MiqgLTH.js";import"./writeUtils-RiCb1SCd.js";import"./Ground-dhRLerDt.js";import"./CollectionFlattener-Be8YW6oV.js";import"./editableLayers-DuIVmwOk.js";import"./catalogUtils-B2PovfNH.js";import"./basemapUtils-rjdIOXhY.js";import"./TablesMixin-CcZZ6esO.js";import"./HeightModelInfo-DaJXTLDg.js";import"./ReactiveMap-r-vujrh9.js";import"./selectionUtils-DYi6daQO.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-BcEL8jIe.js";import"./a11yUtils-BcOnuh2m.js";import"./heightModelInfoUtils-CTi_JiJC.js";import"./arcgisLayerUrl-BpJodxxk.js";import"./ViewingMode-Dodu7ZZk.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-CjDcv_he.js";import"./Compass-S4M9NML1.js";import"./utils-DsJqvptN.js";import"./GoTo-Bv8U0vYJ.js";import"./NavigationToggle-Da_EVApx.js";import"./Zoom-OTCbJYcz.js";import"./vec2f32-BbH2jxlN.js";import"./vec3f32-Cw9Q6TO_.js";import"./normalizeUtils-CzEkgn6d.js";import"./normalizeUtilsCommon-DXRtgGFh.js";import"./utils-nzDIu46v.js";import"./utils-D67OULxu.js";import"./viewpointUtils-BG1_rfM2.js";import"./Viewpoint-sw4jiA6m.js";import"./Cyclical-CEj-eenM.js";import"./mat2d-CXMJJ9G6.js";import"./mat2df64-CBKYtunK.js";import"./vec2-C-4tM9Uv.js";import"./WGLContainer-DyFTYdJ0.js";import"./definitions-ByNBSgP9.js";import"./LabelMetric-aA-CNSUv.js";import"./enums-BRXbslMp.js";import"./Program-BnQQlkGO.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-BhuXqU4L.js";import"./WGLBrushVTLSymbol-De0GmzRI.js";import"./vec4f32-CjrfB-0a.js";import"./StyleDefinition-BK3ROBTO.js";import"./config-MDUrh2eL.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-Ddp-btlS.js";import"./DefaultVertexAttributeLayouts-_lUGuBk_.js";import"./TileKey-m4M152GY.js";import"./mat2df32-orApM5a3.js";import"./Container-BuHS0oKS.js";import"./EffectView-CZsZ4wVb.js";import"./highlightReasons-BQJ1jGcs.js";import"./Tile-B_ZCIyG8.js";import"./quickselect-D0_cvEX6.js";import"./earcut-BqgeR2O3.js";import"./featureConversionUtils-C8uvc1AG.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./MapView-D7swOHse.js";import"./TileInfo-DuivnO5H.js";import"./TileKey-DZd6gJy7.js";import"./unitBezier-BX6NeAEr.js";import"./TileStrategy-CcsveE-I.js";import"./QueueProcessor-01Ee2ByR.js";import"./utils-CXgSw6Sd.js";import"./ColorBackground-UV5G2K2b.js";import"./ClipRect-DDLZgoLv.js";import"./layerViewUtils-D2JqIDZ8.js";import"./AGraphicContainer-iMgJZ5NT.js";import"./TechniqueInstance-BIriMPO0.js";import"./UpdateTracking2D-BHRIz_Fq.js";import"./BindType-BmZEZMMh.js";import"./Util-HYkJg9Vp.js";import"./TileContainer-Cphxq3Rg.js";import"./FeatureCommandQueue-CT5xqujD.js";import"./CIMSymbolHelper-DvNaY2BT.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-BN21lj56.js";import"./GeometryUtils-CGNDP0vy.js";import"./Rect-CUzevAry.js";import"./heatmapTextureUtils-Cp303dtW.js";import"./constants-D5zmR9t2.js";import"./AttributeStore-qiTY00FJ.js";import"./labelFormatUtils-DjuAeSua.js";import"./TimeOnly-DZBbU_oj.js";import"./centroid-DdLmOD72.js";import"./timeSupport-BrCiU-ir.js";import"./json-Wa8cmqdu.js";import"./normalizeUtilsSync--5Av753T.js";const b=2;class dt extends rt{constructor(t){super(),this.element=t,this._handles=new j,this.isWrapAround=!1,this.perspectiveTransform=it(),this.wrapAroundShift=0,this.clipGeometry=null,this._handles.add(J(()=>this.element,()=>{const e=this.element;this.ready(),e&&this._handles.add(X(e,"play",()=>this.requestRender()))},x))}getMesh(t){throw new Error("Method not implemented.")}destroy(){this._handles.destroy(),this.texture=k(this.texture),this._vao&&(this._vao.dispose(),this._vao=null),this._vbo&&(this._vbo.dispose(),this._vbo=null),this.texture&&(this.texture.dispose(),this.texture=null)}get textureSize(){if(!this.texture)return[1,1];const t=this.texture.descriptor;return[t.width,t.height]}get dvsMat3(){return this.parent.dvsMat3}beforeRender(t){const e=this.element;if(e==null)return;const{context:r}=t,{videoWidth:i,videoHeight:o}=e;if(i!==0&&o!==0){if(this.texture)e.paused||this.texture.setData(e);else{const n=new lt;n.wrapMode=nt.CLAMP_TO_EDGE,n.preMultiplyAlpha=!0,n.width=i,n.height=o,this.texture=new mt(r,n,e)}e.paused||(this.texture.generateMipmap(),this.requestRender()),super.beforeRender(t)}}_createTransforms(){return null}updateDrawCoords(t,e,r,i){const o=this.element,n=this._getFrameInfo();if(!o||!n)return;this._initializeData(t,n,r);const{controlPoints:l,horizon:m}=n,h=Math.sqrt(l.length),c=h,{x:a,y:p}=t,u=this._vertices,T=l[0],G=l[h-1],N=l[(c-1)*h],Y=l[(c-1)*h+h-1],O=_(m?m[0].mapPoint:T.mapPoint,r),P=_(m?m[1].mapPoint:G.mapPoint,r),f=_(N.mapPoint,r),D=_(Y.mapPoint,r);this.clipGeometry=m?new st({geometry:B.fromJSON({rings:[[[f.x,f.y],[D.x,D.y],[P.x,P.y],[O.x,O.y],[f.x,f.y]]],spatialReference:r})}):null;for(let y=0;y<l.length;y++){const L=l[y],{sourcePoint:S,mapPoint:A}=L;if(S==null||A==null)continue;const v=_(A,r);u[y*b+0]=v.x-a,u[y*b+1]=v.y-p}let E=e;if(i){const y=Math.min(O.x,P.x,f.x,D.x),L=Math.max(O.x,P.x,f.x,D.x),{worldWidth:S,xBounds:A}=i,[v,z]=A;y<v&&L>v?E=S:L>z&&y<z&&(E=-S)}this.wrapAroundShift=E,this.isWrapAround=E!==0}getVAO(t,e,r){if(this._vertices==null)return null;const i=this._vertices;if(this._vao)this._vbo.setData(i);else{this._vbo=H.createVertex(t,I.DYNAMIC_DRAW,i);const o=H.createVertex(t,I.STATIC_DRAW,this._texCoords);this._ibo=H.createIndex(t,I.DYNAMIC_DRAW,this._indices),this._vao=new ht(t,r,e,{geometry:this._vbo,tex:o},this._ibo)}return this._vao}draw(t){t.drawElements(at.TRIANGLE_STRIP,this._indices.length,t.gl.UNSIGNED_SHORT,0)}_initializeData(t,e,r){if(this._vertices!=null&&this._indices!=null)return;const{controlPoints:i}=e,o=Math.sqrt(i.length),n=o,l=new Float32Array(b*i.length),m=new Uint16Array(2*i.length);for(let a=0;a<i.length;a++){const p=i[a],{sourcePoint:u,mapPoint:T}=p;if(u==null||T==null)continue;const G=_(T,r);l[a*b+0]=G.x-t.x,l[a*b+1]=G.y-t.y,m[2*a+0]=u.x,m[2*a+1]=u.y}const h=new Uint16Array(n*o+(n-2)*(o+2));let c=0;for(let a=0;a<n;a++){for(let p=0;p<o;p++)h[c++]=a*o+p,h[c++]=(a+1)*o+p;a<n-2&&(h[c++]=(a+1)*o+(o-1),h[c++]=(a+1)*o)}this._vertices=l,this._texCoords=m,this._indices=h}_getFrameInfo(){if(!this.groundControlPoints)return null;const t=this._getFrameControlPoints(),e=this.frameHorizonPoints;let r=null;if(e){const i=e.startX,o=e.startY,n=e.endX,l=e.endY;r=[{sourcePoint:M(i,o),mapPoint:new R(e.startLongitude,e.startLatitude)},{sourcePoint:M(n,l),mapPoint:new R(e.endLongitude,e.endLatitude)}]}return{controlPoints:t,horizon:r}}_getFrameControlPoints(){const t=this.groundControlPoints,e=t==null?void 0:t.length;if(!e)return[];const r=new Array(e);for(let i=0;i<e;i++){const{x:o,y:n,lat:l,lon:m}=t[i];r[i]={sourcePoint:M(o,-n),mapPoint:new R(m,l)}}return r}}const g=new K([255,127,0]);let d=class extends ot(ct){constructor(){super(...arguments),this._graphicsLayer=new tt,this._frameOutlineGraphic=new w({symbol:new Z({outline:{type:"simple-line",color:g}})}),this._sensorTrailGraphic=new w({symbol:new U({color:g})}),this._lineOfSightGraphic=new w({symbol:new U({color:g})}),this._sensorLocationGraphic=new w({symbol:new q({color:g})}),this._frameCenterGraphic=new w({symbol:new q({color:g})}),this._overlayContainer=null,this.layer=null,this.symbolColor=g,this.visibleTelemetryElements=null}destroy(){this._graphicsLayer=W(this._graphicsLayer)}initialize(){var s,t,e,r,i;this.addHandles($(()=>this.symbolColor,()=>{this._frameOutlineGraphic.symbol.outline.color=this.symbolColor,this._sensorTrailGraphic.symbol.color=this.symbolColor,this._lineOfSightGraphic.symbol.color=this.symbolColor,this._sensorLocationGraphic.symbol.color=this.symbolColor,this._frameCenterGraphic.symbol.color=this.symbolColor},x)),this._graphicsLayer.graphics.addMany([this._frameOutlineGraphic,this._sensorTrailGraphic,this._lineOfSightGraphic,this._sensorLocationGraphic,this._frameCenterGraphic]),this.visibleTelemetryElements=new F({frameCenter:((s=this.layer.telemetryDisplay)==null?void 0:s.frameCenter)??!0,frameOutline:((t=this.layer.telemetryDisplay)==null?void 0:t.frameOutline)??!0,lineOfSight:((e=this.layer.telemetryDisplay)==null?void 0:e.lineOfSight)??!0,sensorLocation:((r=this.layer.telemetryDisplay)==null?void 0:r.sensorLocation)??!0,sensorTrail:((i=this.layer.telemetryDisplay)==null?void 0:i.sensorTrail)??!0})}attach(){this._overlayContainer=new et,this.container.addChild(this._overlayContainer),this._addOverlayMultipoint(),this.graphicsView=new yt({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this._graphicsLayer.graphics,container:new pt(this.view.featuresTilingScheme)}),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this._graphicsLayer.on("graphic-update",this.graphicsView.graphicUpdateHandler)),this.addAttachHandles([$(()=>{var s,t,e,r,i;return[(s=this.layer.telemetryDisplay)==null?void 0:s.frameCenter,(t=this.layer.telemetryDisplay)==null?void 0:t.frameOutline,(e=this.layer.telemetryDisplay)==null?void 0:e.sensorLocation,(r=this.layer.telemetryDisplay)==null?void 0:r.sensorTrail,(i=this.layer.telemetryDisplay)==null?void 0:i.lineOfSight]},()=>this._updateVisibleTelemetryElements(),x),$(()=>{var s,t,e,r,i;return[this.layer.telemetry,(s=this.visibleTelemetryElements)==null?void 0:s.frameCenter,(t=this.visibleTelemetryElements)==null?void 0:t.frameOutline,(e=this.visibleTelemetryElements)==null?void 0:e.sensorLocation,(r=this.visibleTelemetryElements)==null?void 0:r.sensorTrail,(i=this.visibleTelemetryElements)==null?void 0:i.lineOfSight]},()=>this._updateGraphicGeometries(),x)])}detach(){this._overlayContainer.removeAllChildren(),this.container.removeAllChildren(),this.graphicsView=W(this.graphicsView)}supportsSpatialReference(s){return!0}moveEnd(){}viewChange(){this.graphicsView.viewChange()}update(s){this.graphicsView.processUpdate(s)}isUpdating(){return!this.graphicsView||this.graphicsView.updating}_updateVisibleTelemetryElements(){this.visibleTelemetryElements&&this.layer.telemetryDisplay&&(this.visibleTelemetryElements.frameCenter=this.layer.telemetryDisplay.frameCenter,this.visibleTelemetryElements.frameOutline=this.layer.telemetryDisplay.frameOutline,this.visibleTelemetryElements.lineOfSight=this.layer.telemetryDisplay.lineOfSight,this.visibleTelemetryElements.sensorLocation=this.layer.telemetryDisplay.sensorLocation,this.visibleTelemetryElements.sensorTrail=this.layer.telemetryDisplay.sensorTrail)}_updateGraphicGeometries(){const{telemetry:s}=this.layer,{visibleTelemetryElements:t}=this;s&&t&&(t.frameOutline&&s.frameOutline?this._frameOutlineGraphic.geometry=this.layer.telemetry.frameOutline:this._frameOutlineGraphic.geometry=null,t.sensorTrail&&s.sensorTrail?this._sensorTrailGraphic.geometry=this.layer.telemetry.sensorTrail:this._sensorTrailGraphic.geometry=null,t.lineOfSight&&s.lineOfSight?this._lineOfSightGraphic.geometry=this.layer.telemetry.lineOfSight:this._lineOfSightGraphic.geometry=null,t.sensorLocation&&s.sensorLocation?this._sensorLocationGraphic.geometry=this.layer.telemetry.sensorLocation:this._sensorLocationGraphic.geometry=null,t.frameCenter&&s.frameCenter?this._frameCenterGraphic.geometry=this.layer.telemetry.frameCenter:this._frameCenterGraphic.geometry=null)}async _addOverlayMultipoint(){if(!this.layer.videoElement)return;const s=new dt(this.layer.videoElement);this.addAttachHandles([$(()=>[this.layer.frameHorizonPoints,this.layer.groundControlPoints],()=>{s.frameHorizonPoints=this.layer.frameHorizonPoints,s.groundControlPoints=this.layer.groundControlPoints},x)]),this._overlayContainer.addChild(s),this.view.stage.requestRender()}};C([V()],d.prototype,"graphicsView",void 0),C([V()],d.prototype,"layer",void 0),C([V()],d.prototype,"symbolColor",void 0),C([V({type:F})],d.prototype,"visibleTelemetryElements",void 0),d=C([Q("esri.views.2d.layers.VideoLayerView2D")],d);const Di=d;export{Di as default};
