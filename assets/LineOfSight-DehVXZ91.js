const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/calcite-button-B3dK3J4O.js","assets/button-D77aSY9T.js","assets/jsxFactory-DmHi7Kb2.js","assets/index-DX0rcHuW.js","assets/index-B2yzeq1w.css","assets/uuid-fwrPAdZb.js","assets/form-DT0Txu1X.js","assets/dom-Dv5tDaqe.js","assets/interactive-CM5F_5Ay.js","assets/label-CcvHzygA.js","assets/component-ByvC-PUv.js","assets/loadable-BpL5xwNx.js","assets/locale-jvDArz_C.js","assets/key-D5DPfjW0.js","assets/observers-CLdbMMrh.js","assets/t9n-Bv5oqD69.js","assets/icon-CWAu07D3.js","assets/loader-CQvnYTBN.js"])))=>i.map(i=>d[i]);
import{ac as i,ad as n,aI as m,d as $,ag as w,bh as C,V as B,fq as L,bY as v,dN as V,fr as H,eH as I,b$ as T,eF as N,_ as O}from"./index-DX0rcHuW.js";import{e as S,B as k,r as D,n as a}from"./jsxFactory-DmHi7Kb2.js";import{v as b}from"./LineOfSightAnalysis-Cnuo6V6c.js";import{u as x,f as P}from"./LineOfSightAnalysisTarget-Cv7dd3Bi.js";import{u as E,m as G,j as R}from"./elevationInfoUtils-JmMUMmCn.js";import{_ as z}from"./AnalysisViewModel-BfTiHFId.js";import{e as f}from"./globalCss-CZa70j6i.js";import"./uuid-fwrPAdZb.js";import"./Analysis-4_0ourFi.js";import"./persistable-Dc28tVUD.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-2mKu2ZBA.js";let h=class extends C{constructor(t){super(t),this.location=null,this.intersectedLocation=null,this.intersectedGraphic=null,this.visible=void 0}};i([n({type:m})],h.prototype,"location",void 0),i([n({type:m})],h.prototype,"intersectedLocation",void 0),i([n({type:$})],h.prototype,"intersectedGraphic",void 0),i([n({type:Boolean})],h.prototype,"visible",void 0),h=i([w("esri.widgets.LineOfSight.LineOfSightTarget")],h);const A=h,_=B.ofType(A);let c=class extends z{constructor(e){super(e),this.analysis=null,this.supportedViewType="3d",this.unsupportedErrorMessage="LineOfSightViewModel is only supported in 3D views.",this._vmTargetsToConnection=new Map,this._analysisTargetsToConnection=new Map}initialize(){this.addHandles([this.targets.on("after-add",e=>this._onViewModelTargetAdded(e.item)),this.targets.on("after-remove",e=>this._onViewModelTargetRemoved(e.item)),v(()=>this.analysis,e=>this._onAnalysisChange(e),V)])}destroy(){this._analysisTargetsToConnection.forEach(e=>e.remove())}get state(){return this.disabled||!this.ready?"disabled":this.tool==null?"ready":this.tool.state}get observer(){const{observer:e}=this.analysis;return(e==null?void 0:e.position)==null?null:this._convertAnalysisPointToAbsoluteHeight(e.position,e.elevationInfo)}set observer(e){let t=null;e&&(t=e.clone(),t.hasZ||(t.z=0)),this.analysis.observer=new x({position:t})}get targets(){return this._get("targets")||new _}set targets(e){this._set("targets",H(e,this.targets,_))}continue(){this.tool!=null&&this.tool.continue()}stop(){this.tool!=null&&this.tool.stop()}get testInfo(){}constructAnalysis(){return new b}async onConnectToAnalysisView(e){this.addHandles([e.on("result-changed",t=>{const s=this._analysisTargetsToConnection.get(t.target);s&&(t.result!=null?(s.viewModelTarget.intersectedGraphic=t.result.intersectedGraphic,s.viewModelTarget.intersectedLocation=t.result.intersectedLocation,s.viewModelTarget.visible=t.result.visible):(s.viewModelTarget.intersectedGraphic=null,s.viewModelTarget.intersectedLocation=null,s.viewModelTarget.visible=void 0))})],"view")}onDisconnectFromAnalysisView(){this.removeHandles("view")}_onViewModelTargetAdded(e){if(this._vmTargetsToConnection.get(e))return;const t=new P({position:e.location});this._connectViewModelWithAnalysisTarget(e,t),this.analysis.targets.add(t)}_onViewModelTargetRemoved(e){const t=this._vmTargetsToConnection.get(e);t&&(t.remove(),this.analysis.targets.remove(t.analysisTarget))}_onAnalysisTargetAdded(e){if(this._analysisTargetsToConnection.get(e))return;const{position:t}=e,s=new A({location:t?this._convertAnalysisPointToAbsoluteHeight(t,e.elevationInfo):null});this._connectViewModelWithAnalysisTarget(s,e),this.targets.add(s)}_onAnalysisTargetRemoved(e){const t=this._analysisTargetsToConnection.get(e);t&&(t.remove(),this.targets.remove(t.viewModelTarget))}_connectViewModelWithAnalysisTarget(e,t){let s=!1;const g=I([v(()=>({position:t.position,elevationInfo:t.elevationInfo}),({position:l,elevationInfo:u})=>{s||(s=!0,e.location=l?this._convertAnalysisPointToAbsoluteHeight(l,u):null,s=!1)},T),v(()=>e.location,l=>{if(!s){s=!0;let u=null;l&&(u=l.clone(),u.hasZ||(u.z=0)),t.position=u,t.elevationInfo=null,s=!1}},T)]),p={analysisTarget:t,viewModelTarget:e,remove:()=>{g.remove(),this._vmTargetsToConnection.delete(e),this._analysisTargetsToConnection.delete(t)}};this._vmTargetsToConnection.set(e,p),this._analysisTargetsToConnection.set(t,p)}_onAnalysisChange(e){const t="analysis";this.removeHandles(t),this.addHandles([this.analysis.targets.on("after-add",s=>this._onAnalysisTargetAdded(s.item)),this.analysis.targets.on("after-remove",s=>this._onAnalysisTargetRemoved(s.item))],t),this.targets.removeAll(),e.targets.forEach(s=>{this._onAnalysisTargetAdded(s)})}_convertAnalysisPointToAbsoluteHeight(e,t){const s=e.clone();if(this.view!=null){const g=E(e.hasZ,t);s.z=G(this.view,e,g,R)}return s}};i([n({type:b})],c.prototype,"analysis",void 0),i([n({readOnly:!0})],c.prototype,"state",null),i([n()],c.prototype,"observer",null),i([n({type:_,cast:L,nonNullable:!0})],c.prototype,"targets",null),c=i([w("esri.widgets.LineOfSight.LineOfSightViewModel")],c);const M=c,r="esri-line-of-sight",d={base:r,actions:`${r}__actions`,container:`${r}__container`,error:`${r}__error`,hint:`${r}__hint`,hintText:`${r}__hint-text`,newAnalysisButton:`${r}__new-analysis-button`},y={newAnalysisButton:`${r}__new-button`,continueButton:`${r}__continue-button`,doneButton:`${r}__done-button`};let o=class extends k{constructor(e,t){super(e,t),this.messages=null,this.viewModel=new M,this._onNewAnalysis=()=>{N(this.viewModel.start())},this._onDone=()=>{this.viewModel.stop()},this._onContinue=()=>{this.viewModel.continue()}}loadDependencies(){return D({button:()=>O(()=>import("./calcite-button-B3dK3J4O.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]))})}get active(){return this.viewModel.active}get analysis(){return this.viewModel.analysis}set analysis(e){this.viewModel.analysis=e}get icon(){return"line-of-sight"}set icon(e){this._overrideIfSome("icon",e)}get label(){var e;return((e=this.messages)==null?void 0:e.widgetLabel)??""}set label(e){this._overrideIfSome("label",e)}get view(){return this.viewModel.view}set view(e){this.viewModel.view=e}get visible(){return this.viewModel.visible}set visible(e){this.viewModel.visible=e}render(){return a("div",{class:this.classes(d.base,f.widget,f.panel),role:"presentation"},this._renderContainerNode())}_renderContainerNode(){if(!this.visible)return null;if(!this.viewModel.supported)return this._renderUnsupportedMessage();let e=null;const t=[this._renderNewAnalysisButton()];return this.viewModel.state==="creating"?(e=this._renderHint(),t.unshift(this._renderDoneButton())):this.viewModel.state==="created"&&this.viewModel.targets.length>0&&t.unshift(this._renderContinueButton()),a("div",{class:d.container},e,a("div",{class:d.actions},t))}_renderUnsupportedMessage(){return a("div",{class:d.error,key:"esri-line-of-sight__unsupported"},a("p",null,this.messages.unsupported))}_renderHint(){return a("div",{class:d.hint,key:"esri-line-of-sight__hint"},a("p",{class:d.hintText},this.messages.hint))}_renderNewAnalysisButton(){return this._renderButton({className:d.newAnalysisButton,id:y.newAnalysisButton,label:this.messages.newAnalysis,onClick:this._onNewAnalysis,primary:!0})}_renderDoneButton(){return this._renderButton({id:y.doneButton,label:this.messages.done,onClick:this._onDone,primary:!1})}_renderContinueButton(){return this._renderButton({id:y.newAnalysisButton,label:this.messages.continueAnalysis,onClick:this._onContinue,primary:!1})}_renderButton({className:e,id:t,label:s,onClick:g,primary:p}){const l=this.viewModel.state==="disabled";return a("calcite-button",{appearance:p?"solid":"outline-fill",class:e,"data-id":t,disabled:l,key:t,onclick:g},s)}get test(){}};i([n()],o.prototype,"active",null),i([n({constructOnly:!0,nonNullable:!0})],o.prototype,"analysis",null),i([n()],o.prototype,"icon",null),i([n()],o.prototype,"label",null),i([n(),S("esri/widgets/LineOfSight/t9n/LineOfSight")],o.prototype,"messages",void 0),i([n()],o.prototype,"view",null),i([n({type:M})],o.prototype,"viewModel",void 0),i([n()],o.prototype,"visible",null),o=i([w("esri.widgets.LineOfSight")],o);const se=o;export{se as default};
