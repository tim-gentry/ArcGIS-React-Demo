import{ap as e,n as a,ac as o,ad as p,ag as s}from"./index-DX0rcHuW.js";import{a as n}from"./BitmapContainer-Cz7NGMaj.js";import{f as h}from"./LayerView2D-YNhPkz7V.js";import{_ as d}from"./ExportStrategy-BRvTFXI8.js";import{y}from"./LayerView-C2s9lN61.js";import{i as c}from"./RefreshableLayerView-C2j9J409.js";import"./WGLContainer-DyFTYdJ0.js";import"./definitions-ByNBSgP9.js";import"./LabelMetric-aA-CNSUv.js";import"./enums-BRXbslMp.js";import"./Texture-BF0Xf23l.js";import"./enums-BlUEVwJR.js";import"./Program-BnQQlkGO.js";import"./BufferObject-CWTeBz1x.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-BhuXqU4L.js";import"./vec2f32-BbH2jxlN.js";import"./VertexArrayObject-9V6uZ6_q.js";import"./WGLBrushVTLSymbol-De0GmzRI.js";import"./DefaultUI-BM5o-ZLH.js";import"./jsxFactory-DmHi7Kb2.js";import"./uuid-fwrPAdZb.js";import"./UpdatingHandles-CERUeL1P.js";import"./InputManager-abOXR3ru.js";import"./signal-CpmfLcHB.js";import"./Map-BcseqEdU.js";import"./Basemap-CjElSnyL.js";import"./loadAll-8MiqgLTH.js";import"./writeUtils-RiCb1SCd.js";import"./Ground-dhRLerDt.js";import"./CollectionFlattener-Be8YW6oV.js";import"./editableLayers-DuIVmwOk.js";import"./catalogUtils-B2PovfNH.js";import"./basemapUtils-rjdIOXhY.js";import"./TablesMixin-CcZZ6esO.js";import"./GraphicsCollection-BjA_qBYu.js";import"./HeightModelInfo-DaJXTLDg.js";import"./ReactiveMap-r-vujrh9.js";import"./selectionUtils-DYi6daQO.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-BcEL8jIe.js";import"./a11yUtils-BcOnuh2m.js";import"./heightModelInfoUtils-CTi_JiJC.js";import"./arcgisLayerUrl-BpJodxxk.js";import"./ViewingMode-Dodu7ZZk.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-CjDcv_he.js";import"./Compass-S4M9NML1.js";import"./utils-DsJqvptN.js";import"./GoTo-Bv8U0vYJ.js";import"./NavigationToggle-Da_EVApx.js";import"./Zoom-OTCbJYcz.js";import"./vec4f32-CjrfB-0a.js";import"./StyleDefinition-BK3ROBTO.js";import"./config-MDUrh2eL.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-Ddp-btlS.js";import"./DefaultVertexAttributeLayouts-_lUGuBk_.js";import"./mat3-Ck4GO2qT.js";import"./DisplayObject-I7xo9JVP.js";import"./TileKey-m4M152GY.js";import"./mat2df32-orApM5a3.js";import"./mat2d-CXMJJ9G6.js";import"./vec3f32-Cw9Q6TO_.js";import"./Container-BuHS0oKS.js";import"./EffectView-CZsZ4wVb.js";import"./highlightReasons-BQJ1jGcs.js";import"./Tile-B_ZCIyG8.js";import"./quickselect-D0_cvEX6.js";import"./earcut-BqgeR2O3.js";import"./vec2-C-4tM9Uv.js";import"./vec2f64-Diu2Kaa8.js";import"./featureConversionUtils-C8uvc1AG.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./MapView-D7swOHse.js";import"./Viewpoint-sw4jiA6m.js";import"./Cyclical-CEj-eenM.js";import"./TileInfo-DuivnO5H.js";import"./TileKey-DZd6gJy7.js";import"./viewpointUtils-BG1_rfM2.js";import"./mat2df64-CBKYtunK.js";import"./normalizeUtils-CzEkgn6d.js";import"./normalizeUtilsCommon-DXRtgGFh.js";import"./utils-nzDIu46v.js";import"./utils-D67OULxu.js";import"./unitBezier-BX6NeAEr.js";import"./TileStrategy-CcsveE-I.js";import"./QueueProcessor-01Ee2ByR.js";import"./utils-CXgSw6Sd.js";import"./ColorBackground-UV5G2K2b.js";import"./ClipRect-DDLZgoLv.js";import"./layerViewUtils-D2JqIDZ8.js";import"./Bitmap-BOJgIqqB.js";let t=class extends c(h(y)){update(r){this._strategy.update(r).catch(i=>{e(i)||a.getLogger(this).error(i)}),this.notifyChange("updating")}attach(){this._bitmapContainer=new n,this.container.addChild(this._bitmapContainer),this._strategy=new d({container:this._bitmapContainer,fetchSource:this.fetchBitmapData.bind(this),requestUpdate:this.requestUpdate.bind(this)})}detach(){this._strategy.destroy(),this._strategy=null,this.container.removeChild(this._bitmapContainer),this._bitmapContainer.removeAllChildren()}viewChange(){}moveEnd(){this.requestUpdate()}fetchBitmapData(r,i,m){return this.layer.fetchImageBitmap(r,i,m)}async doRefresh(){this.requestUpdate()}isUpdating(){return this._strategy.updating||this.updateRequested}};o([p()],t.prototype,"_strategy",void 0),o([p()],t.prototype,"updating",void 0),t=o([s("esri.views.2d.layers.BaseDynamicLayerView2D")],t);const mi=t;export{mi as default};
