import{ac as i,ad as c,ag as v,al as l,s as m,U as y}from"./index-DX0rcHuW.js";import{f as d,i as f,s as j}from"./utils-nzDIu46v.js";import{r as N}from"./serverVersionUtils-By8Hm7KS.js";let t=class extends l{constructor(s){super(s),this.moment=null,this.success=!1}};i([c({type:Date,json:{type:Number,write:{writer:(s,e)=>{e.moment=s?s.getTime():null}}}})],t.prototype,"moment",void 0),i([c({type:Boolean,json:{write:!0}})],t.prototype,"success",void 0),t=i([v("esri.rest.versionManagement.gdbVersion.support.PostResult")],t);const S=t,n=new Map;async function O(s,e,r,u){n.has(s)||await N(n,s);const o=n.get(s);if(((o==null?void 0:o.serverVersion)??0)<=11.1)throw new m("post:enterprise-version","versioning API requires ArcGIS Enterprise version 11.2 or higher");if(!e)throw new m("post:missing-guid","guid for version is missing");const a=d(s),p=r.toJSON();r.rows&&(p.rows=JSON.stringify(r.rows));const w=f(a.query,{query:j({...p,f:"json"}),...u,method:"post"});e.startsWith("{")&&(e=e.slice(1,-1));const g=`${a.path}/versions/${e}/post`,{data:h}=await y(g,w);return S.fromJSON(h)}export{O as post,n as serverVersionCacheMap};
