import{ac as s,ad as o,ag as f,bh as V,ap as x,n as w,d as v,eG as q,aL as B,bY as g,dN as k,U as D,go as A,b$ as $,V as R,ar as S,b9 as I}from"./index-DX0rcHuW.js";import{c as U}from"./GraphicsCollection-BjA_qBYu.js";import{d as z,f as C,a as T}from"./RasterVFDisplayObject-DbHAUJvK.js";import{f as F}from"./LayerView2D-YNhPkz7V.js";import{V as M}from"./GraphicsView2D-vu8QQV0J.js";import{h as L}from"./HighlightGraphicContainer-eh9z04a1.js";import{M as H,m as O,f as j}from"./dataUtils-DaNHGSI8.js";import{a as G}from"./BitmapContainer-Cz7NGMaj.js";import{h as J,E}from"./Container-BuHS0oKS.js";import{l as N}from"./Bitmap-BOJgIqqB.js";import{_ as W}from"./ExportStrategy-BRvTFXI8.js";import{J as Y}from"./rasterProjectionHelper-ByWCXlzR.js";import{a as K}from"./WGLContainer-DyFTYdJ0.js";import{m as Q}from"./ImageryLayerView-2PuaWPU5.js";import{y as X}from"./LayerView-C2s9lN61.js";import{i as Z}from"./RefreshableLayerView-C2j9J409.js";import"./BufferObject-CWTeBz1x.js";import"./Texture-BF0Xf23l.js";import"./enums-BlUEVwJR.js";import"./VertexArrayObject-9V6uZ6_q.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./DefaultUI-BM5o-ZLH.js";import"./jsxFactory-DmHi7Kb2.js";import"./uuid-fwrPAdZb.js";import"./UpdatingHandles-CERUeL1P.js";import"./InputManager-abOXR3ru.js";import"./signal-CpmfLcHB.js";import"./Map-BcseqEdU.js";import"./Basemap-CjElSnyL.js";import"./loadAll-8MiqgLTH.js";import"./writeUtils-RiCb1SCd.js";import"./Ground-dhRLerDt.js";import"./CollectionFlattener-Be8YW6oV.js";import"./editableLayers-DuIVmwOk.js";import"./catalogUtils-B2PovfNH.js";import"./basemapUtils-rjdIOXhY.js";import"./TablesMixin-CcZZ6esO.js";import"./HeightModelInfo-DaJXTLDg.js";import"./ReactiveMap-r-vujrh9.js";import"./selectionUtils-DYi6daQO.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-BcEL8jIe.js";import"./a11yUtils-BcOnuh2m.js";import"./heightModelInfoUtils-CTi_JiJC.js";import"./arcgisLayerUrl-BpJodxxk.js";import"./ViewingMode-Dodu7ZZk.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-CjDcv_he.js";import"./Compass-S4M9NML1.js";import"./utils-DsJqvptN.js";import"./GoTo-Bv8U0vYJ.js";import"./NavigationToggle-Da_EVApx.js";import"./Zoom-OTCbJYcz.js";import"./WGLBrushVTLSymbol-De0GmzRI.js";import"./vec4f32-CjrfB-0a.js";import"./definitions-ByNBSgP9.js";import"./StyleDefinition-BK3ROBTO.js";import"./enums-BRXbslMp.js";import"./vec2f32-BbH2jxlN.js";import"./config-MDUrh2eL.js";import"./mat3-Ck4GO2qT.js";import"./DisplayObject-I7xo9JVP.js";import"./LabelMetric-aA-CNSUv.js";import"./Program-BnQQlkGO.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./BoundingBox-BhuXqU4L.js";import"./Tile-B_ZCIyG8.js";import"./quickselect-D0_cvEX6.js";import"./TileKey-m4M152GY.js";import"./ClipRect-DDLZgoLv.js";import"./layerViewUtils-D2JqIDZ8.js";import"./CIMSymbolHelper-DvNaY2BT.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-BN21lj56.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./GeometryUtils-CGNDP0vy.js";import"./mat2d-CXMJJ9G6.js";import"./mat2df32-orApM5a3.js";import"./vec2-C-4tM9Uv.js";import"./Rect-CUzevAry.js";import"./AttributeStore-qiTY00FJ.js";import"./UpdateTracking2D-BHRIz_Fq.js";import"./BindType-BmZEZMMh.js";import"./Util-HYkJg9Vp.js";import"./vec2f64-Diu2Kaa8.js";import"./highlightReasons-BQJ1jGcs.js";import"./labelFormatUtils-DjuAeSua.js";import"./TimeOnly-DZBbU_oj.js";import"./centroid-DdLmOD72.js";import"./featureConversionUtils-C8uvc1AG.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./timeSupport-BrCiU-ir.js";import"./normalizeUtils-CzEkgn6d.js";import"./normalizeUtilsCommon-DXRtgGFh.js";import"./utils-nzDIu46v.js";import"./utils-D67OULxu.js";import"./json-Wa8cmqdu.js";import"./FeatureCommandQueue-CT5xqujD.js";import"./heatmapTextureUtils-Cp303dtW.js";import"./constants-D5zmR9t2.js";import"./QueueProcessor-01Ee2ByR.js";import"./normalizeUtilsSync--5Av753T.js";import"./AGraphicContainer-iMgJZ5NT.js";import"./TechniqueInstance-BIriMPO0.js";import"./TileContainer-Cphxq3Rg.js";import"./vec3f32-Cw9Q6TO_.js";import"./pixelRangeUtils-DR2RxTkt.js";import"./EffectView-CZsZ4wVb.js";import"./TileInfo-DuivnO5H.js";import"./TileKey-DZd6gJy7.js";import"./TileStrategy-CcsveE-I.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-Ddp-btlS.js";import"./DefaultVertexAttributeLayouts-_lUGuBk_.js";import"./earcut-BqgeR2O3.js";import"./MapView-D7swOHse.js";import"./Viewpoint-sw4jiA6m.js";import"./Cyclical-CEj-eenM.js";import"./viewpointUtils-BG1_rfM2.js";import"./mat2df64-CBKYtunK.js";import"./unitBezier-BX6NeAEr.js";import"./utils-CXgSw6Sd.js";import"./ColorBackground-UV5G2K2b.js";import"./timeSupport-BW78MsMT.js";import"./timeUtils-CovJpMS2.js";import"./tagSymbols-BPcGfZon.js";import"./popupUtils-DV44wDbq.js";let h=class extends V{constructor(){super(...arguments),this.attached=!1,this.container=new J,this.updateRequested=!1,this.type="imagery",this._bitmapView=new G}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1}get updating(){return!this.attached||this.isUpdating()}update(t){this.strategy.update(t).catch(e=>{x(e)||w.getLogger(this).error(e)})}hitTest(t){return new v({attributes:{},geometry:t.clone(),layer:this.layer})}attach(){this.container.addChild(this._bitmapView);const t=this.layer.version>=10,e=this.layer.version>=10.1?this.layer.imageMaxHeight:2048,i=this.layer.version>=10.1?this.layer.imageMaxWidth:2048;this.strategy=new W({container:this._bitmapView,imageNormalizationSupported:t,imageMaxHeight:e,imageMaxWidth:i,fetchSource:this._fetchImage.bind(this),requestUpdate:()=>this.requestUpdate()})}detach(){this.strategy.destroy(),this._bitmapView.removeAllChildren(),this.container.removeAllChildren(),this.updateRequested=!1}redraw(){this.strategy.updateExports(async t=>{const{source:e}=t;if(!e||e instanceof ImageBitmap)return;const i=await this.layer.applyRenderer({extent:e.extent,pixelBlock:e.originalPixelBlock??e.pixelBlock});e.filter=r=>this.layer.pixelFilter?this.layer.applyFilter(r):{...i,extent:e.extent}}).catch(t=>{x(t)||w.getLogger(this).error(t)})}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}isUpdating(){return this.strategy.updating||this.updateRequested}getPixelData(){if(this.updating)return null;const t=this.strategy.bitmaps;if(t.length===1&&t[0].source)return{extent:t[0].source.extent,pixelBlock:t[0].source.originalPixelBlock};if(t.length>1){const e=this.view.extent,i=t.map(a=>a.source).filter(a=>a.extent&&a.extent.intersects(e)).map(a=>({extent:a.extent,pixelBlock:a.originalPixelBlock})),r=H(i,e);return r!=null?{extent:r.extent,pixelBlock:r.pixelBlock}:null}return null}async _fetchImage(t,e,i,r){var d;(r=r||{}).timeExtent=this.timeExtent,r.requestAsImageElement=!0,r.returnImageBitmap=!0;const a=await this.layer.fetchImage(t,e,i,r);if(a.imageBitmap)return a.imageBitmap;const n=await this.layer.applyRenderer(a.pixelData,{signal:r.signal}),l=new N(n.pixelBlock,(d=n.extent)==null?void 0:d.clone(),a.pixelData.pixelBlock);return l.filter=u=>this.layer.applyFilter(u),l}};s([o()],h.prototype,"attached",void 0),s([o()],h.prototype,"container",void 0),s([o()],h.prototype,"layer",void 0),s([o()],h.prototype,"strategy",void 0),s([o()],h.prototype,"timeExtent",void 0),s([o()],h.prototype,"view",void 0),s([o()],h.prototype,"updateRequested",void 0),s([o()],h.prototype,"updating",null),s([o()],h.prototype,"type",void 0),h=s([f("esri.views.2d.layers.imagery.ImageryView2D")],h);const tt=h;class et extends K{constructor(){super(...arguments),this.symbolTypes=["triangle"]}prepareRenderPasses(e){const i=e.registerRenderPass({name:"imagery (vf)",brushes:[z],target:()=>this.children,drawPhase:E.MAP});return[...super.prepareRenderPasses(e),i]}doRender(e){this.visible&&e.drawPhase===E.MAP&&this.symbolTypes.forEach(i=>{e.renderPass=i,super.doRender(e)})}}let m=class extends V{constructor(t){super(t),this._loading=null,this.update=q((e,i)=>this._update(e,i).catch(r=>{x(r)||w.getLogger(this).error(r)}))}get updating(){return!!this._loading}redraw(t){if(!this.container.children.length)return;const e=this.container.children[0];e.symbolizerParameters=t,e.invalidateVAO(),this.container.symbolTypes=t.style==="wind_speed"?["scalar","triangle"]:t.style==="simple_scalar"?["scalar"]:["triangle"],this.container.requestRender()}async _update(t,e,i){if(!t.stationary)return;const{extent:r,spatialReference:a}=t.state,n=new B({xmin:r.xmin,ymin:r.ymin,xmax:r.xmax,ymax:r.ymax,spatialReference:a}),[l,d]=t.state.size;this._loading=this.fetchPixels(n,l,d,i);const u=await this._loading;this._addToDisplay(u,e,t.state),this._loading=null}_addToDisplay(t,e,i){if(t.pixelBlock==null)return this.container.children.forEach(l=>l.destroy()),void this.container.removeAllChildren();const{extent:r,pixelBlock:a}=t,n=new C(a);n.offset=[0,0],n.symbolizerParameters=e,n.rawPixelData=t,n.invalidateVAO(),n.x=r.xmin,n.y=r.ymax,n.pixelRatio=i.pixelRatio,n.rotation=i.rotation,n.resolution=i.resolution,n.width=a.width*e.symbolTileSize,n.height=a.height*e.symbolTileSize,this.container.children.forEach(l=>l.destroy()),this.container.removeAllChildren(),this.container.symbolTypes=e.style==="wind_speed"?["scalar","triangle"]:e.style==="simple_scalar"?["scalar"]:["triangle"],this.container.addChild(n)}};s([o()],m.prototype,"fetchPixels",void 0),s([o()],m.prototype,"container",void 0),s([o()],m.prototype,"_loading",void 0),s([o()],m.prototype,"updating",null),m=s([f("esri.views.2d.layers.imagery.ImageryVFStrategy")],m);const it=m;let p=class extends V{constructor(){super(...arguments),this.attached=!1,this.container=new et,this.type="imageryVF",this._dataParameters={exportParametersVersion:0,bbox:"",symbolTileSize:0,time:""},this._fetchpixels=async(t,e,i,r)=>{const a=await this._projectFullExtentPromise,{symbolTileSize:n}=this.layer.renderer,{extent:l,width:d,height:u}=O(t,e,i,n,a);if(a!=null&&!a.intersects(t))return{extent:l,pixelBlock:null};const b={bbox:`${l.xmin}, ${l.ymin}, ${l.xmax}, ${l.ymax}`,exportParametersVersion:this.layer.exportImageServiceParameters.version,symbolTileSize:n,time:JSON.stringify(this.timeExtent||"")};if(this._canReuseVectorFieldData(b)){const c=this.getPixelData();if(c!=null&&`${c.extent.xmin}, ${c.extent.ymin}, ${c.extent.xmax}, ${c.extent.ymax}`===b.bbox)return c}const{pixelData:_}=await this.layer.fetchImage(l,d,u,{timeExtent:this.timeExtent,requestAsImageElement:!1,signal:r});this._dataParameters=b;const P=_==null?void 0:_.pixelBlock;return P==null?{extent:l,pixelBlock:null}:{extent:l,pixelBlock:this.layer.rasterInfo.dataType==="vector-uv"?j(P,"vector-uv"):P}}}get updating(){return!this.attached||this._strategy.updating}attach(){this._projectFullExtentPromise=this._getProjectedFullExtent(this.view.spatialReference),this._strategy=new it({container:this.container,fetchPixels:this._fetchpixels}),this.addHandles(g(()=>this.layer.renderer,t=>this._updateSymbolizerParams(t),k),"attach")}detach(){this._strategy.destroy(),this.container.children.forEach(t=>t.destroy()),this.container.removeAllChildren(),this.removeHandles("attach"),this._strategy=this.container=this._projectFullExtentPromise=null}getPixelData(){var r;const t=(r=this.container.children[0])==null?void 0:r.rawPixelData;if(this.updating||!t)return null;const{extent:e,pixelBlock:i}=t;return{extent:e,pixelBlock:i}}hitTest(t){return new v({attributes:{},geometry:t.clone(),layer:this.layer})}update(t){this._strategy.update(t,this._symbolizerParams).catch(e=>{x(e)||w.getLogger(this).error(e)})}redraw(){const{renderer:t}=this.layer;t&&(this._updateSymbolizerParams(t),this._strategy.redraw(this._symbolizerParams))}_canReuseVectorFieldData(t){const e=this._dataParameters.exportParametersVersion===t.exportParametersVersion,i=this._dataParameters.time===t.time,r=this._dataParameters.symbolTileSize===t.symbolTileSize,a=this._dataParameters.bbox===t.bbox;return e&&i&&r&&a}async _getProjectedFullExtent(t){try{return Y(this.layer.fullExtent,t)}catch{try{const i=(await D(this.layer.url,{query:{option:"footprints",outSR:A(t),f:"json"}})).data.featureCollection.layers[0].layerDefinition.extent;return i?B.fromJSON(i):null}catch{return null}}}_updateSymbolizerParams(t){t.type==="vector-field"&&(this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null}))}};s([o()],p.prototype,"attached",void 0),s([o()],p.prototype,"container",void 0),s([o()],p.prototype,"layer",void 0),s([o()],p.prototype,"timeExtent",void 0),s([o()],p.prototype,"type",void 0),s([o()],p.prototype,"view",void 0),s([o()],p.prototype,"updating",null),p=s([f("esri.views.2d.layers.imagery.VectorFieldView2D")],p);const rt=p;let y=class extends Q(Z(F(X))){constructor(){super(...arguments),this._exportImageVersion=-1,this._highlightGraphics=new U,this._highlightView=void 0,this.layer=null,this.subview=null}get pixelData(){const{subview:t}=this;return this.updating||!t?null:"getPixelData"in t?t.getPixelData():null}update(t){var e;(e=this.subview)==null||e.update(t)}attach(){this.layer.increaseRasterJobHandlerUsage(),this._setSubView(),this.view&&(this._highlightView=new M({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new L(this.view.featuresTilingScheme)}),this.container.addChild(this._highlightView.container)),this.addAttachHandles([g(()=>this.layer.exportImageServiceParameters.version,t=>{t&&this._exportImageVersion!==t&&(this._exportImageVersion=t,this.requestUpdate())},$),g(()=>this.timeExtent,t=>{const{subview:e}=this;e&&(e.timeExtent=t,"redraw"in e?this.requestUpdate():e.redrawOrRefetch())},$),this.layer.on("redraw",()=>{const{subview:t}=this;t&&("redraw"in t?t.redraw():t.redrawOrRefetch())}),g(()=>this.layer.renderer,()=>this._setSubView())])}detach(){var t,e;this.layer.decreaseRasterJobHandlerUsage(),this.container.removeAllChildren(),this._detachSubview(this.subview),(t=this.subview)==null||t.destroy(),this.subview=null,(e=this._highlightView)==null||e.destroy(),this._exportImageVersion=-1}viewChange(){}moveEnd(){this.requestUpdate()}highlight(t,e){if(!((Array.isArray(t)?t[0]:R.isCollection(t)?t.at(0):t)instanceof v))return S();let i=[];return Array.isArray(t)||R.isCollection(t)?i=t.map(r=>r.clone()):t instanceof v&&(i=[t.clone()]),this._highlightGraphics.addMany(i),S(()=>this._highlightGraphics.removeMany(i))}async doRefresh(){this.requestUpdate()}isUpdating(){var e,i;const t=!this.subview||this.subview.updating||!!((e=this._highlightView)!=null&&e.updating);return I("esri-2d-log-updating")&&console.log(`Updating ImageryLayerView2D (${this.layer.id}): ${t}
-> subview ${!this.subview||this.subview.updating}
-> higlightView ${(i=this._highlightView)==null?void 0:i.updating}
`),t}_setSubView(){var i,r;if(!this.view)return;const t=(i=this.layer.renderer)==null?void 0:i.type;let e="imagery";if(t==="vector-field"?e="imageryVF":t==="flow"&&(e="flow"),this.subview){const{type:a}=this.subview;if(a===e)return this._attachSubview(this.subview),void(a==="flow"?this.subview.redrawOrRefetch():a==="imagery"&&this.layer.format==="lerc"?this.subview.redraw():this.requestUpdate());this._detachSubview(this.subview),(r=this.subview)==null||r.destroy()}this.subview=e==="imagery"?new tt({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):e==="imageryVF"?new rt({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):new T({layer:this.layer,layerView:this}),this._attachSubview(this.subview),this.requestUpdate()}_attachSubview(t){t&&!t.attached&&(t.attach(),t.attached=!0,this.container.addChildAt(t.container,0))}_detachSubview(t){t!=null&&t.attached&&(this.container.removeChild(t.container),t.detach(),t.attached=!1)}};s([o()],y.prototype,"pixelData",null),s([o()],y.prototype,"subview",void 0),y=s([f("esri.views.2d.layers.ImageryLayerView2D")],y);const Si=y;export{Si as default};
