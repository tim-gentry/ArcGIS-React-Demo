import{dc as l,dz as $,d3 as M,bp as P}from"./index-DX0rcHuW.js";import{a as S,b as T}from"./elevationInfoUtils-JmMUMmCn.js";function D(e,s){const a=e==null?void 0:e.geometry;if(!e||(a==null?void 0:a.type)!=="mesh"||!s)return;const{renderCoordsHelper:c,elevationProvider:x}=s,{camera:d}=s.state,{extent:t}=a,{center:h,spatialReference:r}=t,z=l(r),n=$(r),b=l(c.spatialReference),v=t.width*z,w=t.height*n,p=(t.zmax??0)*n,u=p-(t.zmin??0)*n,y=Math.max(v,w,u)/b,{x:m,y:i}=h,f=h.z??0;M(o,m,i,f),c.toRenderCoords(o,r,o);const g=y/d.computeScreenPixelSizeAt(o);if(g>d.width*H)return"meshTooClose";if(g<A)return"meshTooFar";const C=S(e),{absoluteZ:R}=T(m,i,p,r,s,C);return R<(x.getElevation(m,i,f,r,"ground")??0)*n+u*U?"meshUnderground":"mesh"}const A=20,H=1,U=.1,o=P();export{D as getDrawMeshHelpMessage};
