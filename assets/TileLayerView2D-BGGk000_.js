import{ar as w,G as y,ap as m,n as I,ac as l,ad as u,ag as V}from"./index-DX0rcHuW.js";import{c as H}from"./GraphicsCollection-BjA_qBYu.js";import"./GeometryUtils-CGNDP0vy.js";import"./CIMSymbolHelper-DvNaY2BT.js";import"./enums-BRXbslMp.js";import"./definitions-ByNBSgP9.js";import"./vec2f32-BbH2jxlN.js";import"./floatRGBA-DZ6CgOhi.js";import"./EffectView-CZsZ4wVb.js";import"./Container-BuHS0oKS.js";import"./WGLContainer-DyFTYdJ0.js";import"./vec4f32-CjrfB-0a.js";import"./Texture-BF0Xf23l.js";import"./enums-BlUEVwJR.js";import"./Program-BnQQlkGO.js";import"./DefaultVertexAttributeLayouts-_lUGuBk_.js";import"./LabelMetric-aA-CNSUv.js";import"./StyleDefinition-BK3ROBTO.js";import"./enums-BRzLM11V.js";import"./MagnifierPrograms-DkhOgXNA.js";import"./pbf-9I_px9lQ.js";import"./FeatureCommandQueue-CT5xqujD.js";import"./UpdateTracking2D-BHRIz_Fq.js";import"./PieChartMeshWriter-C1LrTi5r.js";import"./renderState-yUi34s5A.js";import"./interfaces-B8ge7Jg9.js";import"./testSVGPremultipliedAlpha-eKesxQ43.js";import{V as v}from"./GraphicsView2D-vu8QQV0J.js";import"./earcut-BqgeR2O3.js";import"./vec3f32-Cw9Q6TO_.js";import"./normalizeUtilsCommon-DXRtgGFh.js";import"./UpdatingHandles-CERUeL1P.js";import{r as T,o as g,n as f}from"./imageUtils-CYzf4W0x.js";import{f as q}from"./LayerView2D-YNhPkz7V.js";import{h as U}from"./HighlightGraphicContainer-eh9z04a1.js";import{h as b,m as C,r as Q}from"./TileStrategy-CcsveE-I.js";import{e as d}from"./TileKey-m4M152GY.js";import{y as S}from"./LayerView-C2s9lN61.js";import{i as P}from"./RefreshableLayerView-C2j9J409.js";import{U as G,_ as L}from"./MapServiceLayerViewHelper-KFzhrXJ2.js";import{r as k}from"./drapedUtils-C1LMlkrW.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-BN21lj56.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./mat2d-CXMJJ9G6.js";import"./mat2df32-orApM5a3.js";import"./vec2-C-4tM9Uv.js";import"./Rect-CUzevAry.js";import"./BoundingBox-BhuXqU4L.js";import"./DefaultUI-BM5o-ZLH.js";import"./jsxFactory-DmHi7Kb2.js";import"./uuid-fwrPAdZb.js";import"./InputManager-abOXR3ru.js";import"./signal-CpmfLcHB.js";import"./Map-BcseqEdU.js";import"./Basemap-CjElSnyL.js";import"./loadAll-8MiqgLTH.js";import"./writeUtils-RiCb1SCd.js";import"./Ground-dhRLerDt.js";import"./CollectionFlattener-Be8YW6oV.js";import"./editableLayers-DuIVmwOk.js";import"./catalogUtils-B2PovfNH.js";import"./basemapUtils-rjdIOXhY.js";import"./TablesMixin-CcZZ6esO.js";import"./HeightModelInfo-DaJXTLDg.js";import"./ReactiveMap-r-vujrh9.js";import"./selectionUtils-DYi6daQO.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-BcEL8jIe.js";import"./a11yUtils-BcOnuh2m.js";import"./heightModelInfoUtils-CTi_JiJC.js";import"./arcgisLayerUrl-BpJodxxk.js";import"./ViewingMode-Dodu7ZZk.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-CjDcv_he.js";import"./Compass-S4M9NML1.js";import"./utils-DsJqvptN.js";import"./GoTo-Bv8U0vYJ.js";import"./NavigationToggle-Da_EVApx.js";import"./Zoom-OTCbJYcz.js";import"./DisplayObject-I7xo9JVP.js";import"./highlightReasons-BQJ1jGcs.js";import"./Tile-B_ZCIyG8.js";import"./quickselect-D0_cvEX6.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./BufferObject-CWTeBz1x.js";import"./VertexArrayObject-9V6uZ6_q.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./WGLBrushVTLSymbol-De0GmzRI.js";import"./config-MDUrh2eL.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-Ddp-btlS.js";import"./mat3-Ck4GO2qT.js";import"./vec2f64-Diu2Kaa8.js";import"./featureConversionUtils-C8uvc1AG.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./MapView-D7swOHse.js";import"./Viewpoint-sw4jiA6m.js";import"./Cyclical-CEj-eenM.js";import"./TileInfo-DuivnO5H.js";import"./TileKey-DZd6gJy7.js";import"./viewpointUtils-BG1_rfM2.js";import"./mat2df64-CBKYtunK.js";import"./normalizeUtils-CzEkgn6d.js";import"./utils-nzDIu46v.js";import"./utils-D67OULxu.js";import"./unitBezier-BX6NeAEr.js";import"./utils-CXgSw6Sd.js";import"./ColorBackground-UV5G2K2b.js";import"./CircularArray-CujHzHWW.js";import"./AttributeStore-qiTY00FJ.js";import"./labelFormatUtils-DjuAeSua.js";import"./TimeOnly-DZBbU_oj.js";import"./centroid-DdLmOD72.js";import"./timeSupport-BrCiU-ir.js";import"./json-Wa8cmqdu.js";import"./ZoomMomentumEstimator-pQkiU-PR.js";import"./heatmapTextureUtils-Cp303dtW.js";import"./constants-D5zmR9t2.js";import"./QueueProcessor-01Ee2ByR.js";import"./BindType-BmZEZMMh.js";import"./Util-HYkJg9Vp.js";import"./TurboLine-JJoKvl8B.js";import"./basicInterfaces-wONHx_SN.js";import"./normalizeUtilsSync--5Av753T.js";import"./Bitmap-BOJgIqqB.js";import"./TileContainer-Cphxq3Rg.js";import"./ClipRect-DDLZgoLv.js";import"./layerViewUtils-D2JqIDZ8.js";import"./AGraphicContainer-iMgJZ5NT.js";import"./TechniqueInstance-BIriMPO0.js";import"./scaleUtils-ClqQrarK.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./sublayerUtils-BdOfNgEy.js";import"./popupUtils-DV44wDbq.js";const F=[0,0];let h=class extends P(T(q(S))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new H,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){var i;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(i=this._highlightView)==null||i.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new b(this.layer.tileInfo,this.layer.fullExtent,i==null?void 0:i.effectiveMinLOD,i==null?void 0:i.effectiveMaxLOD),this._fetchQueue=new C({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,r)=>this.fetchTile(e,r)}),this._tileStrategy=new Q({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),G(this,this.layer)){const e=this._highlightView=new v({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new U(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new L({createFetchPopupFeaturesQueryGeometry:(r,p)=>k(r,p,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(r,p)=>{e.graphicUpdateHandler({graphic:r,property:p})},layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t,i;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),(i=this._highlightView)==null||i.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i):[]}highlight(t){return this._popupHighlightHelper?this._popupHighlightHelper.highlight(t):w()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var i;return y((i=this.layer.tileInfo)==null?void 0:i.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(F,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){const e=this.tilemapCache,{signal:r,resamplingLevel:p=0}=i;if(!e)try{return await this._fetchImage(t,r)}catch(o){if(!m(o)&&!this.resampling)return g(this._tileInfoView.tileInfo.size);if(p<3){const n=this._tileInfoView.getTileParentId(t.id);if(n){const c=new d(n),_=await this.fetchTile(c,{...i,resamplingLevel:p+1});return f(this._tileInfoView,_,c,t)}}throw o}const s=new d(0,0,0,0);let a;try{if(await e.fetchAvailabilityUpsample(t.level,t.row,t.col,s,{signal:r}),s.level!==t.level&&!this.resampling)return g(this._tileInfoView.tileInfo.size);a=await this._fetchImage(s,r)}catch(o){if(m(o))throw o;a=await this._fetchImage(t,r)}return this.resampling?f(this._tileInfoView,a,s,t):a}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){m(i)||I.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};l([u()],h.prototype,"resampling",null),l([u()],h.prototype,"tilemapCache",null),h=l([V("esri.views.2d.layers.TileLayerView2D")],h);const ue=h;export{ue as default};
