import{cE as w,aV as g,aG as h,aZ as v,cd as y,aF as b,cF as x,cG as $,cH as E,s as f,n as F,cI as V}from"./index-DX0rcHuW.js";const d=()=>F.getLogger("esri.layers.support.labelFormatUtils"),p={type:"simple",evaluate:()=>null},Z={getAttribute:(r,t)=>r.field(t)};async function H(r,t,c){if(!r||!r.symbol||!t)return p;const s=r.where,o=x(r);let a;if(o.type==="arcade"){const e=await $(o.expression,c,t);if(e==null)return p;a={type:"arcade",evaluate(u,n){try{const l="attributes"in u?e.repurposeFeature(u):u;l.contextTimeZone=n??null;const i=e.evaluate({$view:{timeZone:n},$feature:l},e.services);if(i!=null)return i.toString()}catch(l){d().error(new f("arcade-expression-error","Encountered an error when evaluating label expression for feature",{error:l,feature:u,expression:o}))}return null},needsHydrationToEvaluate:()=>V(o.expression)==null}}else a={type:"simple",evaluate:e=>o.expression.replaceAll(/{[^}]*}/g,u=>{const n=u.slice(1,-1),l=t.get(n);if(!l)return u;let i=null;return"attributes"in e?e&&e.attributes&&(i=e.attributes[l.name]):i=e.field(l.name),i==null?"":A(i,l)})};if(s){let e;try{e=await E(s,t)}catch(n){return d().error(new f("bad-where-clause","Encountered an error when evaluating where clause, ignoring",{where:s,error:n})),p}const u=a.evaluate;a.evaluate=(n,l)=>{const i="attributes"in n?void 0:Z;try{if(e.testFeature(n,i))return u(n,l)}catch(m){d().error(new f("bad-where-clause","Encountered an error when evaluating where clause for feature",{where:s,feature:n,error:m}))}return null}}return a}function A(r,t){if(r==null)return"";const c=t.domain;if(c){if(c.type==="codedValue"||c.type==="coded-value"){const o=r;for(const a of c.codedValues)if(a.code===o)return a.name}else if(c.type==="range"){const{max:o,min:a}=w(t),e=+r;if(a!=null&&o!=null&&a<=e&&e<=o)return c.name}}let s=r;return g(t)?s=h(s,v("short-date")):y(t)&&(s=b(+s)),s||""}export{A as g,H as w};
