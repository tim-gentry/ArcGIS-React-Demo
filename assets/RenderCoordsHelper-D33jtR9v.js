import{f as $,dZ as v,dS as c,dW as R,d3 as M,bp as P,c$ as m,dk as d,bq as b,d0 as h,hQ as x,d_ as B,dc as Z,bz as S}from"./index-DX0rcHuW.js";import{a as g}from"./spatialReferenceEllipsoidUtils-Bv0mQCFg.js";import{c as G}from"./projectPointToVector-6lqiVL77.js";import{t as z}from"./projectVectorToPoint-jxEu1YJy.js";import{n as y}from"./projectVectorToVector-DjKO2tJh.js";import{H as U,_ as q}from"./boundedPlane-MAPkm7Yi.js";import{Z as E,c as F}from"./sphere-COyqsaGw.js";import{c as i,m as I,S as L}from"./plane-BL9J6YX0.js";import{t as _}from"./ElevationProvider-Xg9LKEp7.js";import{l as u}from"./ViewingMode-Dodu7ZZk.js";function O(r){const{value:t,operations:e}=r;return{operations:e,value:e.create(t)}}function T(r,t,e){return r.operations.setExtent(r.value,t,e.value),e}function W(r){return{operations:r,value:r.create()}}function w(r,t,e=W(r)){return e.operations=r,r.copy(t,e.value),e}function Y(r){return w(F,E(0,0,0,v(r).radius))}const A=2**50;function j(){return w(q,U([0,0,0],[A,0,0],[0,A,0]))}function k(r,t,e){return r.operations.axisAt(r.value,t,c.Z,e)}function H(r,t,e,s){return r.operations.axisAt(r.value,t,e,s)}function Q(r,t,e){return r.operations.intersectRay(r.value,t,e)}function X(r,t,e){return r.operations.intersectRayClosestSilhouette(r.value,t,e)}function D(r,t){return r.operations.altitudeAt(r.value,t)}function C(r,t,e,s){return r.operations.setAltitudeAt(r.value,t,e,s)}function J(r,t,e,s){return t!==s&&R(s,t),M(a,s[12],s[13],s[14]),C(r,a,e,a),s[12]=a[0],s[13]=a[1],s[14]=a[2],s}function f(r,t,e){return r.operations.elevate(r.value,t,e.value)}const a=P();function at(r,t,e,s,n){return n[0]=m(r,t),n[1]=m(r,e),n[2]=m(r,s),n}function ut(r,t,e,s,n){d(e,r),d(l,t),b(l,l),h(s,l,e),h(n,s,e)}function ct(r,t){return r?g(t):t.isGeographic?$.PlateCarree:t}const l=P();class p{constructor(t,e,s,n){this.viewingMode=t,this.spatialReference=e,this.unitInMeters=s,this._coordinateSystem=n,this._tmpCoordinateSystem=O(n),this.referenceEllipsoid=v(e),this.sphericalPCPF=g(e)}set extent(t){t&&T(this._coordinateSystem,t,this._coordinateSystem)}getAltitude(t){return D(this._coordinateSystem,t)}setAltitude(t,e,s=t){return C(this._coordinateSystem,s,e,t)}setAltitudeOfTransformation(t,e){J(this._coordinateSystem,e,t,e)}worldUpAtPosition(t,e){return k(this._coordinateSystem,t,e)}worldBasisAtPosition(t,e,s){return H(this._coordinateSystem,t,e,s)}basisMatrixAtPosition(t,e){const s=this.worldBasisAtPosition(t,c.X,i.get()),n=this.worldBasisAtPosition(t,c.Y,i.get()),o=this.worldBasisAtPosition(t,c.Z,i.get());return x(e,s[0],s[1],s[2],0,n[0],n[1],n[2],0,o[0],o[1],o[2],0,0,0,0,1),e}headingAtPosition(t,e){const s=this.worldUpAtPosition(t,i.get()),n=this.worldBasisAtPosition(t,c.Y,i.get()),o=I(e,n,s);return B(o)}intersectManifoldClosestSilhouette(t,e,s){return f(this._coordinateSystem,e,this._tmpCoordinateSystem),X(this._tmpCoordinateSystem,t,s),s}intersectManifold(t,e,s){f(this._coordinateSystem,e,this._tmpCoordinateSystem);const n=i.get();return Q(this._tmpCoordinateSystem,t,n)?d(s,n):null}intersectInfiniteManifold(t,e,s){if(this.viewingMode===u.Global)return this.intersectManifold(t,e,s);f(this._coordinateSystem,e,this._tmpCoordinateSystem);const n=this._tmpCoordinateSystem.value,o=i.get();return L(n.plane,t,o)?d(s,o):null}toRenderCoords(t,e,s){return _(t)?G(t,e,this.spatialReference):y(t,e,s,this.spatialReference)}fromRenderCoords(t,e,s=null){return _(e)?(s!=null&&(e.spatialReference=s),z(t,this.spatialReference,e)?e:null):y(t,this.spatialReference,e,s)?e:null}static create(t,e){switch(t){case u.Local:return new p(u.Local,e,Z(e),j());case u.Global:return new p(u.Global,e,1,Y(e))}}static renderUnitScaleFactor(t,e){return S(t)/S(e)}}export{at as q,p as v,ut as w,ct as z};
