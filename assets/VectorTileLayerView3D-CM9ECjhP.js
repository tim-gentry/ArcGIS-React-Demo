import{M as q,b8 as z,kV as N,ee as k,b9 as H,s as O,eJ as A,bY as F,dN as U,eK as W,eE as G,dI as $,ac as c,ad as u,ag as j}from"./index-DX0rcHuW.js";import{t as K}from"./DefaultUI-BM5o-ZLH.js";import{h as Y,t as Z}from"./TileInfoViewPOT-i_DAbbI5.js";import{d as J}from"./RenderableTile-CE6botJN.js";import{e as Q}from"./TileKey-m4M152GY.js";import{u as X,f as tt,s as et,n as it,d as rt}from"./WGLBrushVTLSymbol-De0GmzRI.js";import{p as ot}from"./VTLMaterialManager-B10yUbF1.js";import{a as g,i as T}from"./StyleDefinition-BK3ROBTO.js";import{O as st,R as b}from"./enums-BlUEVwJR.js";import{l as P}from"./StyleRepository-DxNhOGT9.js";import{l as lt}from"./LayerView3D-CLOjZQPa.js";import{p as at}from"./TiledLayerView3D-D-BGvpdn.js";import{D as nt,G as mt}from"./terrainUtils-BQLPw4Jq.js";import{y as pt}from"./LayerView-C2s9lN61.js";import"./jsxFactory-DmHi7Kb2.js";import"./uuid-fwrPAdZb.js";import"./UpdatingHandles-CERUeL1P.js";import"./InputManager-abOXR3ru.js";import"./signal-CpmfLcHB.js";import"./Map-BcseqEdU.js";import"./Basemap-CjElSnyL.js";import"./loadAll-8MiqgLTH.js";import"./writeUtils-RiCb1SCd.js";import"./Ground-dhRLerDt.js";import"./CollectionFlattener-Be8YW6oV.js";import"./editableLayers-DuIVmwOk.js";import"./catalogUtils-B2PovfNH.js";import"./basemapUtils-rjdIOXhY.js";import"./TablesMixin-CcZZ6esO.js";import"./GraphicsCollection-BjA_qBYu.js";import"./HeightModelInfo-DaJXTLDg.js";import"./ReactiveMap-r-vujrh9.js";import"./selectionUtils-DYi6daQO.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-BcEL8jIe.js";import"./a11yUtils-BcOnuh2m.js";import"./heightModelInfoUtils-CTi_JiJC.js";import"./arcgisLayerUrl-BpJodxxk.js";import"./ViewingMode-Dodu7ZZk.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-CjDcv_he.js";import"./Compass-S4M9NML1.js";import"./utils-DsJqvptN.js";import"./GoTo-Bv8U0vYJ.js";import"./NavigationToggle-Da_EVApx.js";import"./Zoom-OTCbJYcz.js";import"./Rect-CUzevAry.js";import"./Texture-BF0Xf23l.js";import"./pbf-9I_px9lQ.js";import"./rasterizingUtils-YvjREnlf.js";import"./floatRGBA-DZ6CgOhi.js";import"./constants-D5zmR9t2.js";import"./TileInfo-DuivnO5H.js";import"./TileKey-DZd6gJy7.js";import"./TileStrategy-CcsveE-I.js";import"./vec2-C-4tM9Uv.js";import"./QueueProcessor-01Ee2ByR.js";import"./mat3-Ck4GO2qT.js";import"./enums-BRzLM11V.js";import"./BufferObject-CWTeBz1x.js";import"./VertexArrayObject-9V6uZ6_q.js";import"./config-MDUrh2eL.js";import"./DefaultVertexAttributeLayouts-_lUGuBk_.js";import"./DisplayObject-I7xo9JVP.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./GeometryUtils-CGNDP0vy.js";import"./vec4f32-CjrfB-0a.js";import"./definitions-ByNBSgP9.js";import"./vec2f32-BbH2jxlN.js";import"./ShaderCompiler-G2XYGDs6.js";import"./programUtils-CwiKxPbA.js";import"./enums-BRXbslMp.js";import"./unitBezier-BX6NeAEr.js";import"./WaterSurface.glsl-CB7boCuS.js";import"./RenderGeometry-CQQOC_nW.js";import"./vec2f64-Diu2Kaa8.js";import"./vec3f32-Cw9Q6TO_.js";import"./DoubleArray-tnpOy9RK.js";import"./Texture-0jciB86n.js";import"./Matrix4PassUniform-CTNrzJ6Q.js";import"./interfaces-B8ge7Jg9.js";import"./BindType-BmZEZMMh.js";import"./VertexAttribute-BnAa5VW0.js";import"./Util-HYkJg9Vp.js";import"./basicInterfaces-wONHx_SN.js";import"./mat3f64-BBpwCtoL.js";import"./mat4f64-Dk4dwAN8.js";import"./ShaderTechniqueConfiguration-D3UbJ2mX.js";import"./doublePrecisionUtils-B0owpBza.js";import"./Indices-BZu2O98k.js";import"./Material-BfvzXcva.js";import"./triangle-CGr49R4x.js";import"./sphere-COyqsaGw.js";import"./plane-BL9J6YX0.js";import"./quatf64-BrpT0VRp.js";import"./mathUtils-BsqbT0oM.js";import"./lineSegment-C2OVzbAD.js";import"./renderState-yUi34s5A.js";import"./requestImageUtils-Cd7mPI4y.js";import"./orientedBoundingBox-BTwqkknQ.js";import"./quat-DrJsq_-D.js";import"./spatialReferenceEllipsoidUtils-Bv0mQCFg.js";import"./computeTranslationToOriginAndRotation-B9BchKSd.js";import"./ElevationProvider-Xg9LKEp7.js";import"./boundedPlane-MAPkm7Yi.js";import"./verticalOffsetUtils-Bq_pVrum.js";import"./hydratedFeatures-DcIGyuBL.js";import"./projectVectorToVector-DjKO2tJh.js";import"./projectPointToVector-6lqiVL77.js";import"./frustum-Tc8kkw3_.js";import"./axisAngleDegrees-jEN9n05M.js";import"./weather-CSMUgeU9.js";import"./Scheduler-Bg_fxWwI.js";import"./debugFlags-Cr0sx6r_.js";import"./Float4DrawUniform-X0Lc1Ix0.js";import"./NestedMap-DgiGbX8E.js";import"./Octree-lrGXb_0y.js";import"./InterleavedLayout-ZKuAjCiK.js";import"./BufferView-XrMc2vJu.js";import"./types-D0PSWh4d.js";import"./Intersector-CG5xfiNM.js";import"./glUtil-C6KhMg1m.js";import"./ColorMaterial.glsl-CcrBVOmk.js";import"./VertexColor.glsl-BX9otDj2.js";import"./dehydratedFeatures-DvwHN5Vy.js";import"./featureConversionUtils-C8uvc1AG.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./edgeUtils-CckHLSHv.js";import"./DecodeSymbolColor.glsl-CpAWHGzb.js";import"./earcut-BqgeR2O3.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./vec3-DxxvdsHs.js";import"./SnappingCandidate-O5eRSE6e.js";import"./triangulationUtils-BSy4A0L9.js";import"./deduplicate-CREmZpKM.js";import"./Normals-ClOhen2_.js";import"./objectResourceUtils-dMevf21j.js";import"./devEnvironmentUtils-D6qIi8Ky.js";import"./vec4-B2fX0VJI.js";import"./DefaultMaterial_COLOR_GAMMA-vDn2TTUE.js";import"./resourceUtils-Cv8EFCAN.js";import"./CIMSymbolHelper-DvNaY2BT.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-BN21lj56.js";import"./mat2d-CXMJJ9G6.js";import"./mat2df32-orApM5a3.js";import"./BoundingBox-BhuXqU4L.js";import"./cimSymbolUtils-DzDRYI6s.js";import"./utils-BbU12Hvz.js";import"./lineStippleUtils-Cu2kwDBg.js";import"./projectVectorToPoint-jxEu1YJy.js";import"./MeshComponent-CcZOTV9N.js";import"./imageUtils-BsB3EL45.js";import"./MeshVertexAttributes-DiX-RN8y.js";import"./meshVertexSpaceUtils-UWZ_3JBG.js";import"./MeshLocalVertexSpace-Ck1lhGhd.js";import"./projection-BJFZt5ZW.js";import"./DefaultLayouts-LbPHMYzg.js";import"./webStyleSymbolUtils-CT_ZIx-N.js";import"./Intersector-ENyKy7_L.js";import"./Viewshed.glsl-BfaJltDE.js";import"./Viewpoint-sw4jiA6m.js";import"./Cyclical-CEj-eenM.js";import"./RenderCoordsHelper-D33jtR9v.js";import"./scaleUtils-ClqQrarK.js";import"./viewpointUtils-CNGyoIgw.js";import"./earthUtils-GWU8KixL.js";import"./spatialReferenceSupport-Bk67zMEK.js";import"./ElevationSamplerData-CFwzCheb.js";import"./Environment-Bpau6Ty8.js";import"./quantityUtils-DSpmykXR.js";import"./Program-BnQQlkGO.js";import"./ShadowCastVisualizeTechniqueConfiguration-Dah3u-G-.js";import"./euclideanLengthMeasurementUtils-CuSkQONc.js";import"./ray-BtGY6UNr.js";import"./ZoomMomentumEstimator-pQkiU-PR.js";import"./labelFormatUtils-DjuAeSua.js";import"./FeatureTileDescriptor3D-CvT50Jkf.js";import"./elevationInfoUtils-JmMUMmCn.js";import"./ElevationQueryTileCache-ByGSevWc.js";import"./LayerConstants-B33OP6sh.js";import"./ElevationRange-BrgM1moX.js";import"./geometryServiceUtils-zF1xOQ4Y.js";import"./project-BQyPiext.js";import"./utils-nzDIu46v.js";import"./utils-D67OULxu.js";import"./hitTestSelectUtils-UXJPjatw.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./resources-Bv-4dVJF.js";import"./edgeProcessing-BO3TMEUB.js";import"./testSVGPremultipliedAlpha-eKesxQ43.js";import"./RenderingContext-DNkBZ-bu.js";import"./ProgramCache-DLTjjJNh.js";import"./layerViewUtils-D2JqIDZ8.js";class ht{constructor(t,e,i){this._scale=t,this._shift=e,this._levelShift=i}getLevelRowColumn(t){const e=this.getLevelShift(t[0]),i=this._shift+e;return i?[t[0]-e,t[1]>>i,t[2]>>i]:t}getLevelShift(t){return Math.min(t,this._levelShift)}getOffset(t,e){let i=0,r=0;const o=this._shift+this.getLevelShift(t[0]);if(o){const s=(1<<o)-1,l=e/(this._scale*(1<<o-1));i=(t[2]&s)*l,r=(t[1]&s)*l}return[i,r]}getScale(t){return this._scale*(1<<this._shift+this.getLevelShift(t))}}class D extends Y{constructor(t,e,i,r){super(t,e,i,t.tileInfo.lods.length-1),this._memCache=r,this._ongoingTileRequests=new Map,this._ongoingRequestToController=new Map,this._tileInfoView=new Z(t.tileInfo,t.fullExtent)}destroy(){super.destroy(),this._ongoingRequestToController.forEach(t=>t.abort()),this._ongoingRequestToController.clear(),this._ongoingTileRequests.clear()}async getVectorTile(t,e){const i=new Q(t[0],t[1],t[2],0);let r=this._memCache.get(i.id);if(r!=null)return r.retain(),r;const o=await this._getVectorTileData(i);if(q(e),!this._layer)return null;if(r=this._memCache.get(i.id),r!=null)return r.retain(),r;const s=this._layer.tileInfo.getTileBounds(z(),i),l=this._tileInfoView.getTileResolution(t[0]);return r=new J(i,l,s[0],s[3],512,512,this._styleRepository,this._memCache),r.setData(o),o&&(r.retain(),this._memCache.put(i.id,r,r.usedMemory,N)),r.neededForCoverage=!0,r.transforms.tileUnitsToPixels=K(1/8,0,0,0,1/8,0,0,0,1),r}_getVectorTileData(t){const e=t.id;if(this._ongoingTileRequests.has(e))return this._ongoingTileRequests.get(e);const i=new AbortController,r={signal:i.signal},o=this._getParsedVectorTileData(t,r).then(s=>(this._ongoingTileRequests.delete(e),this._ongoingRequestToController.delete(e),s)).catch(()=>(this._ongoingTileRequests.delete(e),this._ongoingRequestToController.delete(e),null));return this._ongoingTileRequests.set(e,o),this._ongoingRequestToController.set(e,i),o}_getParsedVectorTileData(t,e){return this.fetchTileData(t,e).then(i=>this.parseTileData({key:t,data:i},e))}}const ct={vtlBackground:X,vtlFill:tt,vtlLine:et,vtlCircle:it,vtlSymbol:rt},f=1e-6;class B{constructor(t,e){this.spriteMosaic=t,this.glyphMosaic=e,this._brushCache=new Map,this._vtlMaterialManager=new ot}dispose(){this._brushCache&&(this._brushCache.forEach(t=>t.dispose()),this._brushCache=null),this._vtlMaterialManager=k(this._vtlMaterialManager),this.spriteMosaic.dispose(),this.glyphMosaic.dispose()}get vectorTilesMaterialManager(){return this._vtlMaterialManager}drawSymbols(t,e,i){const r=i.layers;t.renderPass="translucent";for(let o=0;o<r.length;o++){const s=r[o];if(s.type!==g.SYMBOL)continue;const l=s.getLayoutProperty("visibility");if(l&&l.getValue()===T.NONE)continue;const a=t.displayLevel;s.minzoom!==void 0&&s.minzoom>a+f||s.maxzoom!==void 0&&s.maxzoom<=a-f||(t.styleLayerUID=s.uid,t.styleLayer=s,this._drawWithBrush(t,e,"vtlSymbol"))}}drawBackground(t,e,i){if(i.backgroundBucketIds.length===0)return;const{context:r,displayLevel:o,requiredLevel:s}=t;e.key.level=s,r.setBlendingEnabled(!0),r.setDepthTestEnabled(!1),r.setStencilTestEnabled(!1),t.renderPass="background",i.backgroundBucketIds.forEach(l=>{const a=i.getLayerById(l);if(a.type!==g.BACKGROUND)return;const d=a.getLayoutProperty("visibility");d&&d.getValue()===T.NONE||a.minzoom!==void 0&&a.minzoom>o+f||a.maxzoom!==void 0&&a.maxzoom<=o-f||(t.styleLayerUID=a.uid,t.styleLayer=a,this._drawWithBrush(t,e,"vtlBackground"))})}drawTile(t,e,i,r){const{context:o}=t,s=i.layers;o.setBlendingEnabled(!1),o.setDepthTestEnabled(!0),o.setDepthWriteEnabled(!0),o.setDepthFunction(st.LEQUAL),t.renderPass="opaque";for(let l=s.length-1;l>=0;l--){const a=s[l];r!=null&&r!==a.type||this._renderStyleLayer(a,t,e,!1)}o.setDepthWriteEnabled(!1),o.setBlendingEnabled(!0),o.setBlendFunctionSeparate(b.ONE,b.ONE_MINUS_SRC_ALPHA,b.ONE,b.ONE_MINUS_SRC_ALPHA),t.renderPass="translucent";for(let l=0;l<s.length;l++){const a=s[l];r!=null&&r!==a.type||this._renderStyleLayer(a,t,e,!1)}o.setDepthTestEnabled(!1),o.bindVAO()}_renderStyleLayer(t,e,i,r){if(!(r||t&&i.layerData.has(t.uid)))return;const o=t.getLayoutProperty("visibility");if(o&&o.getValue()===T.NONE)return;const{renderPass:s}=e;let l;switch(t.type){case g.BACKGROUND:if(s!=="background")return;l="vtlBackground";break;case g.FILL:if(s!=="opaque"&&e.renderPass!=="translucent")return;l="vtlFill";break;case g.LINE:if(s!=="translucent")return;l="vtlLine";break;case g.CIRCLE:if(s!=="translucent")return;l="vtlCircle";break;case g.SYMBOL:if(s!=="translucent")return;l="vtlSymbol"}const a=e.displayLevel;if(t.minzoom!==void 0&&t.minzoom>a+f||t.maxzoom!==void 0&&t.maxzoom<=a-f)return;const{context:d}=e;d.setStencilTestEnabled(!1),d.setStencilWriteMask(0),e.styleLayerUID=t.uid,e.styleLayer=t,this._drawWithBrush(e,i,l)}_drawWithBrush(t,e,i){if(!this._brushCache.has(i)){const r=ct[i];this._brushCache.set(i,new r)}this._brushCache.get(i).drawMany(t,[e])}}let h=class extends at(lt(pt)){constructor(){super(...arguments),this._tileHandlerController=null,this.type="vector-tile-3d",this.levelShift=H("disable-feature:vtl-level-shift")?0:1}initialize(){if(this.layer.fullExtent==null)return void this.addResolvingPromise(Promise.reject(new O("vectortilelayerview:full-extent-undefined","This layer view's layer does not define a fullExtent.")));const{basemapTerrain:n,spatialReference:t,state:e,viewingMode:i}=this.view,r=i==="local"&&!nt(t)||mt.force512VTL?this.layer.tileInfo:this.layer.tileInfo.getCompatibleForVTL(256),o=this._getTileInfoSupportError(r,this.layer.fullExtent);if(o!=null)return this.addResolvingPromise(Promise.reject(o));const s=A(()=>{var m,p;return(p=(m=this.view)==null?void 0:m.basemapTerrain)==null?void 0:p.tilingSchemeLocked}).then(()=>{var S,L;const m=n.tilingScheme,p=m.pixelSize,R=p===256?1:2,y=(S=n.spatialReference)!=null&&S.isGeographic&&p===256?1:0,C=(L=n.spatialReference)!=null&&L.isGeographic||p!==256?0:1;let _;this.schemaHelper=new ht(R,y,this.levelShift+C),_=p===256||p===512?this.layer.tileInfo.getCompatibleForVTL(p):this.layer.tileInfo;const v=this._getTileInfoCompatibilityError(_,m);if(v)throw v;this.tileInfo=_});this._tileHandlerController=new AbortController;const l=this.view.resourceController;this._memCache=l.memoryController.newCache(`vtl-${this.layer.uid}`,m=>{m.release()}),this.addHandles(F(()=>this.view.qualitySettings.memoryLimit,m=>this._memCache.maxSize=Math.ceil(m/10*1048576),U));const a=new P(this.layer.currentStyleInfo.style);this._tileHandler=new D(this.layer,a,e.contentPixelRatio,this._memCache);const d=this._tileHandlerController.signal,M=dt(l),x=this._tileHandler.start({signal:d,schedule:M}),I=this._tileHandler.spriteMosaic;I.then(m=>{!W(d)&&this._tileHandler&&(this.painter=new B(m,this._tileHandler.glyphMosaic))}),x.then(()=>this._tileHandlerController=null);const w=()=>{var v;this._tileHandlerController&&this._tileHandlerController.abort(),this._tileHandlerController=new AbortController,this._memCache.clear();const m=this.layer.currentStyleInfo.style,p=((v=this.view.state)==null?void 0:v.contentPixelRatio)??1,R=new P(m),y=new D(this.layer,R,p,this._memCache),C=y.start({signal:this._tileHandlerController.signal,schedule:M}),_=y.spriteMosaic;C.then(()=>this._tileHandlerController=null),this._updatingHandles.addPromise(Promise.all([C,_]).then(([,S])=>{const L=this._tileHandler,E=this.painter;this.painter=new B(S,y.glyphMosaic),this._tileHandler=y,this.emit("data-changed"),L.destroy(),E&&E.dispose()}))};this._updatingHandles.add(()=>{var m;return{style:this.layer.currentStyleInfo.style,pixelRatio:(m=this.view.state)==null?void 0:m.contentPixelRatio}},w),this.addHandles([this.layer.on("paint-change",()=>this.emit("data-changed")),this.layer.on("style-layer-change",w),this.layer.on("delete-style-layer",w),this.layer.on("spriteSource-change",()=>this.emit("data-changed")),this.layer.on("layout-change",()=>this.emit("data-changed")),this.layer.on("style-layer-visibility-change",()=>this.emit("data-changed"))]);const V=Promise.all([s,x,I]);this.addResolvingPromise(V)}destroy(){this.painter=k(this.painter),this._tileHandlerController=G(this._tileHandlerController),this._tileHandler=$(this._tileHandler),this._memCache=$(this._memCache)}get contentZoom(){return H("disable-feature:vtl-level-shift")?1:this.view.qualitySettings.tiledSurface.vtlContentZoom}get displayLevelRange(){const n=this.tileInfo.lods,t=this.layer.minScale||n[0].scale,e=this.layer.maxScale||n[n.length-1].scale,i=this.levelRangeFromScaleRange(t,e);return this.layer.maxScale?i.maxLevel++:i.maxLevel+=this.levelShift,i}get dataScaleRange(){const n=this.tileInfo.lods;return{minScale:n[0].scale,maxScale:n[n.length-1].scale}}get dataLevelRange(){const{minScale:n,maxScale:t}=this.dataScaleRange,e=this.levelRangeFromScaleRange(n,t);return e.minLevel===1&&this.tileInfo.size[0]===256&&(e.minLevel=0),e.maxLevel+=this.levelShift,e}async fetchTile(n,t){const e=this.schemaHelper.getLevelRowColumn(n);return this._tileHandler.getVectorTile(e,t)}};c([u()],h.prototype,"layer",void 0),c([u()],h.prototype,"levelShift",void 0),c([u()],h.prototype,"contentZoom",null),c([u()],h.prototype,"displayLevelRange",null),c([u()],h.prototype,"tileInfo",void 0),c([u()],h.prototype,"dataScaleRange",null),c([u()],h.prototype,"dataLevelRange",null),c([u()],h.prototype,"updatingProgressValue",void 0),h=c([j("esri.views.3d.layers.VectorTileLayerView3D")],h);const Jr=h;function dt(n){return t=>n.immediate.schedule(t)}export{Jr as default};
